ARM GAS  /tmp/cciI3Ykx.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/main.c"
  20              		.section	.text.Error_Handler,"ax",%progbits
  21              		.align	1
  22              		.global	Error_Handler
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	Error_Handler:
  28              	.LFB237:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "adc.h"
  22:Core/Src/main.c **** #include "can.h"
  23:Core/Src/main.c **** #include "dma.h"
  24:Core/Src/main.c **** #include "spi.h"
  25:Core/Src/main.c **** #include "tim.h"
  26:Core/Src/main.c **** #include "usart.h"
  27:Core/Src/main.c **** #include "gpio.h"
  28:Core/Src/main.c **** 
  29:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  30:Core/Src/main.c **** /* USER CODE BEGIN Includes */
ARM GAS  /tmp/cciI3Ykx.s 			page 2


  31:Core/Src/main.c **** #include "anal.h"
  32:Core/Src/main.c **** #include "logger_wrapper.h"
  33:Core/Src/main.c **** #include "can_send_timebase.h"
  34:Core/Src/main.c **** #include "can_utils.h"
  35:Core/Src/main.c **** /* USER CODE END Includes */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* USER CODE END PTD */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  43:Core/Src/main.c **** /* USER CODE BEGIN PD */
  44:Core/Src/main.c **** /* USER CODE END PD */
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  47:Core/Src/main.c **** /* USER CODE BEGIN PM */
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /* USER CODE END PM */
  50:Core/Src/main.c **** 
  51:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** /* USER CODE BEGIN PV */
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** /* USER CODE END PV */
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  58:Core/Src/main.c **** void SystemClock_Config(void);
  59:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  60:Core/Src/main.c **** 
  61:Core/Src/main.c **** /* USER CODE END PFP */
  62:Core/Src/main.c **** 
  63:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  64:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  65:Core/Src/main.c **** 
  66:Core/Src/main.c **** /* USER CODE END 0 */
  67:Core/Src/main.c **** 
  68:Core/Src/main.c **** /**
  69:Core/Src/main.c ****   * @brief  The application entry point.
  70:Core/Src/main.c ****   * @retval int
  71:Core/Src/main.c ****   */
  72:Core/Src/main.c **** int main(void)
  73:Core/Src/main.c **** {
  74:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  75:Core/Src/main.c **** 
  76:Core/Src/main.c ****   /* USER CODE END 1 */
  77:Core/Src/main.c **** 
  78:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  79:Core/Src/main.c **** 
  80:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  81:Core/Src/main.c ****   HAL_Init();
  82:Core/Src/main.c **** 
  83:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  84:Core/Src/main.c **** 
  85:Core/Src/main.c ****   /* USER CODE END Init */
  86:Core/Src/main.c **** 
  87:Core/Src/main.c ****   /* Configure the system clock */
ARM GAS  /tmp/cciI3Ykx.s 			page 3


  88:Core/Src/main.c ****   SystemClock_Config();
  89:Core/Src/main.c **** 
  90:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  91:Core/Src/main.c **** 
  92:Core/Src/main.c ****   /* USER CODE END SysInit */
  93:Core/Src/main.c **** 
  94:Core/Src/main.c ****   /* Initialize all configured peripherals */
  95:Core/Src/main.c ****   MX_GPIO_Init();
  96:Core/Src/main.c ****   MX_DMA_Init();
  97:Core/Src/main.c ****   MX_ADC1_Init();
  98:Core/Src/main.c ****   MX_CAN1_Init();
  99:Core/Src/main.c ****   MX_SPI2_Init();
 100:Core/Src/main.c ****   MX_SPI3_Init();
 101:Core/Src/main.c ****   MX_UART5_Init();
 102:Core/Src/main.c ****   MX_USART1_UART_Init();
 103:Core/Src/main.c ****   MX_ADC3_Init();
 104:Core/Src/main.c ****   MX_TIM12_Init();
 105:Core/Src/main.c ****   MX_TIM2_Init();
 106:Core/Src/main.c ****   MX_TIM6_Init();
 107:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 108:Core/Src/main.c ****   HAL_TIM_Base_Start(&htim2);
 109:Core/Src/main.c ****   anal_init();
 110:Core/Src/main.c ****   logger_init();
 111:Core/Src/main.c ****   can_init();
 112:Core/Src/main.c ****   can_send_timebase_init();
 113:Core/Src/main.c ****   /* USER CODE END 2 */
 114:Core/Src/main.c **** 
 115:Core/Src/main.c ****   /* Infinite loop */
 116:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 117:Core/Src/main.c ****   while (1)
 118:Core/Src/main.c ****   {
 119:Core/Src/main.c ****     can_send_timebase_routine();
 120:Core/Src/main.c ****     for(int i=0; i<11; ++i) {
 121:Core/Src/main.c ****       logger_log(LOGGER_INFO, "anal %d: %fv", i, anal_get_pin_mv(i));
 122:Core/Src/main.c ****     }
 123:Core/Src/main.c ****     logger_routine();
 124:Core/Src/main.c ****     /* USER CODE END WHILE */
 125:Core/Src/main.c **** 
 126:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 127:Core/Src/main.c ****   }
 128:Core/Src/main.c ****   /* USER CODE END 3 */
 129:Core/Src/main.c **** }
 130:Core/Src/main.c **** 
 131:Core/Src/main.c **** /**
 132:Core/Src/main.c ****   * @brief System Clock Configuration
 133:Core/Src/main.c ****   * @retval None
 134:Core/Src/main.c ****   */
 135:Core/Src/main.c **** void SystemClock_Config(void)
 136:Core/Src/main.c **** {
 137:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 138:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 139:Core/Src/main.c **** 
 140:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 141:Core/Src/main.c ****   */
 142:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 143:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 144:Core/Src/main.c **** 
ARM GAS  /tmp/cciI3Ykx.s 			page 4


 145:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 146:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 147:Core/Src/main.c ****   */
 148:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 149:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 150:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 151:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 152:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 153:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 180;
 154:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 155:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 156:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 157:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 158:Core/Src/main.c ****   {
 159:Core/Src/main.c ****     Error_Handler();
 160:Core/Src/main.c ****   }
 161:Core/Src/main.c **** 
 162:Core/Src/main.c ****   /** Activate the Over-Drive mode
 163:Core/Src/main.c ****   */
 164:Core/Src/main.c ****   if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 165:Core/Src/main.c ****   {
 166:Core/Src/main.c ****     Error_Handler();
 167:Core/Src/main.c ****   }
 168:Core/Src/main.c **** 
 169:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 170:Core/Src/main.c ****   */
 171:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 172:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 173:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 174:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 175:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 176:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 177:Core/Src/main.c **** 
 178:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 179:Core/Src/main.c ****   {
 180:Core/Src/main.c ****     Error_Handler();
 181:Core/Src/main.c ****   }
 182:Core/Src/main.c **** }
 183:Core/Src/main.c **** 
 184:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 185:Core/Src/main.c **** 
 186:Core/Src/main.c **** /* USER CODE END 4 */
 187:Core/Src/main.c **** 
 188:Core/Src/main.c **** /**
 189:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 190:Core/Src/main.c ****   * @retval None
 191:Core/Src/main.c ****   */
 192:Core/Src/main.c **** void Error_Handler(void)
 193:Core/Src/main.c **** {
  29              		.loc 1 193 1 view -0
  30              		.cfi_startproc
  31              		@ Volatile: function does not return.
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
 194:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 195:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
ARM GAS  /tmp/cciI3Ykx.s 			page 5


 196:Core/Src/main.c ****   __disable_irq();
  35              		.loc 1 196 3 view .LVU1
  36              	.LBB4:
  37              	.LBI4:
  38              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
ARM GAS  /tmp/cciI3Ykx.s 			page 6


  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/cciI3Ykx.s 			page 7


 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
  39              		.loc 2 140 27 view .LVU2
  40              	.LBB5:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  41              		.loc 2 142 3 view .LVU3
  42              		.syntax unified
  43              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
  44 0000 72B6     		cpsid i
  45              	@ 0 "" 2
  46              		.thumb
  47              		.syntax unified
  48              	.L2:
  49              	.LBE5:
  50              	.LBE4:
 197:Core/Src/main.c ****   while (1)
  51              		.loc 1 197 3 view .LVU4
 198:Core/Src/main.c ****   {
 199:Core/Src/main.c ****   }
  52              		.loc 1 199 3 view .LVU5
 197:Core/Src/main.c ****   while (1)
  53              		.loc 1 197 9 view .LVU6
  54 0002 FEE7     		b	.L2
  55              		.cfi_endproc
  56              	.LFE237:
  58              		.section	.text.SystemClock_Config,"ax",%progbits
  59              		.align	1
ARM GAS  /tmp/cciI3Ykx.s 			page 8


  60              		.global	SystemClock_Config
  61              		.syntax unified
  62              		.thumb
  63              		.thumb_func
  65              	SystemClock_Config:
  66              	.LFB236:
 136:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  67              		.loc 1 136 1 view -0
  68              		.cfi_startproc
  69              		@ args = 0, pretend = 0, frame = 80
  70              		@ frame_needed = 0, uses_anonymous_args = 0
  71 0000 00B5     		push	{lr}
  72              		.cfi_def_cfa_offset 4
  73              		.cfi_offset 14, -4
  74 0002 95B0     		sub	sp, sp, #84
  75              		.cfi_def_cfa_offset 88
 137:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  76              		.loc 1 137 3 view .LVU8
 137:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  77              		.loc 1 137 22 is_stmt 0 view .LVU9
  78 0004 3422     		movs	r2, #52
  79 0006 0021     		movs	r1, #0
  80 0008 07A8     		add	r0, sp, #28
  81 000a FFF7FEFF 		bl	memset
  82              	.LVL0:
 138:Core/Src/main.c **** 
  83              		.loc 1 138 3 is_stmt 1 view .LVU10
 138:Core/Src/main.c **** 
  84              		.loc 1 138 22 is_stmt 0 view .LVU11
  85 000e 0023     		movs	r3, #0
  86 0010 0293     		str	r3, [sp, #8]
  87 0012 0393     		str	r3, [sp, #12]
  88 0014 0493     		str	r3, [sp, #16]
  89 0016 0593     		str	r3, [sp, #20]
  90 0018 0693     		str	r3, [sp, #24]
 142:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
  91              		.loc 1 142 3 is_stmt 1 view .LVU12
  92              	.LBB6:
 142:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
  93              		.loc 1 142 3 view .LVU13
  94 001a 0093     		str	r3, [sp]
 142:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
  95              		.loc 1 142 3 view .LVU14
  96 001c 234A     		ldr	r2, .L11
  97 001e 116C     		ldr	r1, [r2, #64]
  98 0020 41F08051 		orr	r1, r1, #268435456
  99 0024 1164     		str	r1, [r2, #64]
 142:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 100              		.loc 1 142 3 view .LVU15
 101 0026 126C     		ldr	r2, [r2, #64]
 102 0028 02F08052 		and	r2, r2, #268435456
 103 002c 0092     		str	r2, [sp]
 142:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 104              		.loc 1 142 3 view .LVU16
 105 002e 009A     		ldr	r2, [sp]
 106              	.LBE6:
 142:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
ARM GAS  /tmp/cciI3Ykx.s 			page 9


 107              		.loc 1 142 3 view .LVU17
 143:Core/Src/main.c **** 
 108              		.loc 1 143 3 view .LVU18
 109              	.LBB7:
 143:Core/Src/main.c **** 
 110              		.loc 1 143 3 view .LVU19
 111 0030 0193     		str	r3, [sp, #4]
 143:Core/Src/main.c **** 
 112              		.loc 1 143 3 view .LVU20
 113 0032 1F4B     		ldr	r3, .L11+4
 114 0034 1A68     		ldr	r2, [r3]
 115 0036 42F44042 		orr	r2, r2, #49152
 116 003a 1A60     		str	r2, [r3]
 143:Core/Src/main.c **** 
 117              		.loc 1 143 3 view .LVU21
 118 003c 1B68     		ldr	r3, [r3]
 119 003e 03F44043 		and	r3, r3, #49152
 120 0042 0193     		str	r3, [sp, #4]
 143:Core/Src/main.c **** 
 121              		.loc 1 143 3 view .LVU22
 122 0044 019B     		ldr	r3, [sp, #4]
 123              	.LBE7:
 143:Core/Src/main.c **** 
 124              		.loc 1 143 3 view .LVU23
 148:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 125              		.loc 1 148 3 view .LVU24
 148:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 126              		.loc 1 148 36 is_stmt 0 view .LVU25
 127 0046 0123     		movs	r3, #1
 128 0048 0793     		str	r3, [sp, #28]
 149:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 129              		.loc 1 149 3 is_stmt 1 view .LVU26
 149:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 130              		.loc 1 149 30 is_stmt 0 view .LVU27
 131 004a 4FF48033 		mov	r3, #65536
 132 004e 0893     		str	r3, [sp, #32]
 150:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 133              		.loc 1 150 3 is_stmt 1 view .LVU28
 150:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 134              		.loc 1 150 34 is_stmt 0 view .LVU29
 135 0050 0223     		movs	r3, #2
 136 0052 0D93     		str	r3, [sp, #52]
 151:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 137              		.loc 1 151 3 is_stmt 1 view .LVU30
 151:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 138              		.loc 1 151 35 is_stmt 0 view .LVU31
 139 0054 4FF48002 		mov	r2, #4194304
 140 0058 0E92     		str	r2, [sp, #56]
 152:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 180;
 141              		.loc 1 152 3 is_stmt 1 view .LVU32
 152:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 180;
 142              		.loc 1 152 30 is_stmt 0 view .LVU33
 143 005a 0422     		movs	r2, #4
 144 005c 0F92     		str	r2, [sp, #60]
 153:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 145              		.loc 1 153 3 is_stmt 1 view .LVU34
 153:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
ARM GAS  /tmp/cciI3Ykx.s 			page 10


 146              		.loc 1 153 30 is_stmt 0 view .LVU35
 147 005e B422     		movs	r2, #180
 148 0060 1092     		str	r2, [sp, #64]
 154:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 149              		.loc 1 154 3 is_stmt 1 view .LVU36
 154:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 150              		.loc 1 154 30 is_stmt 0 view .LVU37
 151 0062 1193     		str	r3, [sp, #68]
 155:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 152              		.loc 1 155 3 is_stmt 1 view .LVU38
 155:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 153              		.loc 1 155 30 is_stmt 0 view .LVU39
 154 0064 1293     		str	r3, [sp, #72]
 156:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 155              		.loc 1 156 3 is_stmt 1 view .LVU40
 156:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 156              		.loc 1 156 30 is_stmt 0 view .LVU41
 157 0066 1393     		str	r3, [sp, #76]
 157:Core/Src/main.c ****   {
 158              		.loc 1 157 3 is_stmt 1 view .LVU42
 157:Core/Src/main.c ****   {
 159              		.loc 1 157 7 is_stmt 0 view .LVU43
 160 0068 07A8     		add	r0, sp, #28
 161 006a FFF7FEFF 		bl	HAL_RCC_OscConfig
 162              	.LVL1:
 157:Core/Src/main.c ****   {
 163              		.loc 1 157 6 discriminator 1 view .LVU44
 164 006e B0B9     		cbnz	r0, .L8
 164:Core/Src/main.c ****   {
 165              		.loc 1 164 3 is_stmt 1 view .LVU45
 164:Core/Src/main.c ****   {
 166              		.loc 1 164 7 is_stmt 0 view .LVU46
 167 0070 FFF7FEFF 		bl	HAL_PWREx_EnableOverDrive
 168              	.LVL2:
 164:Core/Src/main.c ****   {
 169              		.loc 1 164 6 discriminator 1 view .LVU47
 170 0074 A8B9     		cbnz	r0, .L9
 171:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 171              		.loc 1 171 3 is_stmt 1 view .LVU48
 171:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 172              		.loc 1 171 31 is_stmt 0 view .LVU49
 173 0076 0F23     		movs	r3, #15
 174 0078 0293     		str	r3, [sp, #8]
 173:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 175              		.loc 1 173 3 is_stmt 1 view .LVU50
 173:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 176              		.loc 1 173 34 is_stmt 0 view .LVU51
 177 007a 0223     		movs	r3, #2
 178 007c 0393     		str	r3, [sp, #12]
 174:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 179              		.loc 1 174 3 is_stmt 1 view .LVU52
 174:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 180              		.loc 1 174 35 is_stmt 0 view .LVU53
 181 007e 0023     		movs	r3, #0
 182 0080 0493     		str	r3, [sp, #16]
 175:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 183              		.loc 1 175 3 is_stmt 1 view .LVU54
ARM GAS  /tmp/cciI3Ykx.s 			page 11


 175:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 184              		.loc 1 175 36 is_stmt 0 view .LVU55
 185 0082 4FF4A053 		mov	r3, #5120
 186 0086 0593     		str	r3, [sp, #20]
 176:Core/Src/main.c **** 
 187              		.loc 1 176 3 is_stmt 1 view .LVU56
 176:Core/Src/main.c **** 
 188              		.loc 1 176 36 is_stmt 0 view .LVU57
 189 0088 4FF48053 		mov	r3, #4096
 190 008c 0693     		str	r3, [sp, #24]
 178:Core/Src/main.c ****   {
 191              		.loc 1 178 3 is_stmt 1 view .LVU58
 178:Core/Src/main.c ****   {
 192              		.loc 1 178 7 is_stmt 0 view .LVU59
 193 008e 0521     		movs	r1, #5
 194 0090 02A8     		add	r0, sp, #8
 195 0092 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 196              	.LVL3:
 178:Core/Src/main.c ****   {
 197              		.loc 1 178 6 discriminator 1 view .LVU60
 198 0096 30B9     		cbnz	r0, .L10
 182:Core/Src/main.c **** 
 199              		.loc 1 182 1 view .LVU61
 200 0098 15B0     		add	sp, sp, #84
 201              		.cfi_remember_state
 202              		.cfi_def_cfa_offset 4
 203              		@ sp needed
 204 009a 5DF804FB 		ldr	pc, [sp], #4
 205              	.L8:
 206              		.cfi_restore_state
 159:Core/Src/main.c ****   }
 207              		.loc 1 159 5 is_stmt 1 view .LVU62
 208 009e FFF7FEFF 		bl	Error_Handler
 209              	.LVL4:
 210              	.L9:
 166:Core/Src/main.c ****   }
 211              		.loc 1 166 5 view .LVU63
 212 00a2 FFF7FEFF 		bl	Error_Handler
 213              	.LVL5:
 214              	.L10:
 180:Core/Src/main.c ****   }
 215              		.loc 1 180 5 view .LVU64
 216 00a6 FFF7FEFF 		bl	Error_Handler
 217              	.LVL6:
 218              	.L12:
 219 00aa 00BF     		.align	2
 220              	.L11:
 221 00ac 00380240 		.word	1073887232
 222 00b0 00700040 		.word	1073770496
 223              		.cfi_endproc
 224              	.LFE236:
 226              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 227              		.align	2
 228              	.LC0:
 229 0000 616E616C 		.ascii	"anal %d: %fv\000"
 229      2025643A 
 229      20256676 
ARM GAS  /tmp/cciI3Ykx.s 			page 12


 229      00
 230              		.global	__aeabi_f2d
 231              		.section	.text.main,"ax",%progbits
 232              		.align	1
 233              		.global	main
 234              		.syntax unified
 235              		.thumb
 236              		.thumb_func
 238              	main:
 239              	.LFB235:
  73:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 240              		.loc 1 73 1 view -0
 241              		.cfi_startproc
 242              		@ args = 0, pretend = 0, frame = 0
 243              		@ frame_needed = 0, uses_anonymous_args = 0
 244 0000 10B5     		push	{r4, lr}
 245              		.cfi_def_cfa_offset 8
 246              		.cfi_offset 4, -8
 247              		.cfi_offset 14, -4
 248 0002 82B0     		sub	sp, sp, #8
 249              		.cfi_def_cfa_offset 16
  81:Core/Src/main.c **** 
 250              		.loc 1 81 3 view .LVU66
 251 0004 FFF7FEFF 		bl	HAL_Init
 252              	.LVL7:
  88:Core/Src/main.c **** 
 253              		.loc 1 88 3 view .LVU67
 254 0008 FFF7FEFF 		bl	SystemClock_Config
 255              	.LVL8:
  95:Core/Src/main.c ****   MX_DMA_Init();
 256              		.loc 1 95 3 view .LVU68
 257 000c FFF7FEFF 		bl	MX_GPIO_Init
 258              	.LVL9:
  96:Core/Src/main.c ****   MX_ADC1_Init();
 259              		.loc 1 96 3 view .LVU69
 260 0010 FFF7FEFF 		bl	MX_DMA_Init
 261              	.LVL10:
  97:Core/Src/main.c ****   MX_CAN1_Init();
 262              		.loc 1 97 3 view .LVU70
 263 0014 FFF7FEFF 		bl	MX_ADC1_Init
 264              	.LVL11:
  98:Core/Src/main.c ****   MX_SPI2_Init();
 265              		.loc 1 98 3 view .LVU71
 266 0018 FFF7FEFF 		bl	MX_CAN1_Init
 267              	.LVL12:
  99:Core/Src/main.c ****   MX_SPI3_Init();
 268              		.loc 1 99 3 view .LVU72
 269 001c FFF7FEFF 		bl	MX_SPI2_Init
 270              	.LVL13:
 100:Core/Src/main.c ****   MX_UART5_Init();
 271              		.loc 1 100 3 view .LVU73
 272 0020 FFF7FEFF 		bl	MX_SPI3_Init
 273              	.LVL14:
 101:Core/Src/main.c ****   MX_USART1_UART_Init();
 274              		.loc 1 101 3 view .LVU74
 275 0024 FFF7FEFF 		bl	MX_UART5_Init
 276              	.LVL15:
ARM GAS  /tmp/cciI3Ykx.s 			page 13


 102:Core/Src/main.c ****   MX_ADC3_Init();
 277              		.loc 1 102 3 view .LVU75
 278 0028 FFF7FEFF 		bl	MX_USART1_UART_Init
 279              	.LVL16:
 103:Core/Src/main.c ****   MX_TIM12_Init();
 280              		.loc 1 103 3 view .LVU76
 281 002c FFF7FEFF 		bl	MX_ADC3_Init
 282              	.LVL17:
 104:Core/Src/main.c ****   MX_TIM2_Init();
 283              		.loc 1 104 3 view .LVU77
 284 0030 FFF7FEFF 		bl	MX_TIM12_Init
 285              	.LVL18:
 105:Core/Src/main.c ****   MX_TIM6_Init();
 286              		.loc 1 105 3 view .LVU78
 287 0034 FFF7FEFF 		bl	MX_TIM2_Init
 288              	.LVL19:
 106:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 289              		.loc 1 106 3 view .LVU79
 290 0038 FFF7FEFF 		bl	MX_TIM6_Init
 291              	.LVL20:
 108:Core/Src/main.c ****   anal_init();
 292              		.loc 1 108 3 view .LVU80
 293 003c 1148     		ldr	r0, .L18
 294 003e FFF7FEFF 		bl	HAL_TIM_Base_Start
 295              	.LVL21:
 109:Core/Src/main.c ****   logger_init();
 296              		.loc 1 109 3 view .LVU81
 297 0042 FFF7FEFF 		bl	anal_init
 298              	.LVL22:
 110:Core/Src/main.c ****   can_init();
 299              		.loc 1 110 3 view .LVU82
 300 0046 FFF7FEFF 		bl	logger_init
 301              	.LVL23:
 111:Core/Src/main.c ****   can_send_timebase_init();
 302              		.loc 1 111 3 view .LVU83
 303 004a FFF7FEFF 		bl	can_init
 304              	.LVL24:
 112:Core/Src/main.c ****   /* USER CODE END 2 */
 305              		.loc 1 112 3 view .LVU84
 306 004e FFF7FEFF 		bl	can_send_timebase_init
 307              	.LVL25:
 308 0052 13E0     		b	.L16
 309              	.LVL26:
 310              	.L15:
 311              	.LBB8:
 121:Core/Src/main.c ****     }
 312              		.loc 1 121 7 view .LVU85
 313 0054 E0B2     		uxtb	r0, r4
 314 0056 FFF7FEFF 		bl	anal_get_pin_mv
 315              	.LVL27:
 316 005a 10EE100A 		vmov	r0, s0
 121:Core/Src/main.c ****     }
 317              		.loc 1 121 7 is_stmt 0 discriminator 1 view .LVU86
 318 005e FFF7FEFF 		bl	__aeabi_f2d
 319              	.LVL28:
 320 0062 CDE90001 		strd	r0, [sp]
 321 0066 2346     		mov	r3, r4
ARM GAS  /tmp/cciI3Ykx.s 			page 14


 322 0068 074A     		ldr	r2, .L18+4
 323 006a 0021     		movs	r1, #0
 324 006c 0748     		ldr	r0, .L18+8
 325 006e FFF7FEFF 		bl	LOGGER_log
 326              	.LVL29:
 120:Core/Src/main.c ****       logger_log(LOGGER_INFO, "anal %d: %fv", i, anal_get_pin_mv(i));
 327              		.loc 1 120 24 is_stmt 1 discriminator 3 view .LVU87
 328 0072 0134     		adds	r4, r4, #1
 329              	.LVL30:
 330              	.L14:
 120:Core/Src/main.c ****       logger_log(LOGGER_INFO, "anal %d: %fv", i, anal_get_pin_mv(i));
 331              		.loc 1 120 19 discriminator 1 view .LVU88
 332 0074 0A2C     		cmp	r4, #10
 333 0076 EDDD     		ble	.L15
 334              	.LBE8:
 123:Core/Src/main.c ****     /* USER CODE END WHILE */
 335              		.loc 1 123 5 view .LVU89
 336 0078 FFF7FEFF 		bl	logger_routine
 337              	.LVL31:
 117:Core/Src/main.c ****   {
 338              		.loc 1 117 9 view .LVU90
 339              	.L16:
 117:Core/Src/main.c ****   {
 340              		.loc 1 117 3 view .LVU91
 119:Core/Src/main.c ****     for(int i=0; i<11; ++i) {
 341              		.loc 1 119 5 view .LVU92
 342 007c FFF7FEFF 		bl	can_send_timebase_routine
 343              	.LVL32:
 120:Core/Src/main.c ****       logger_log(LOGGER_INFO, "anal %d: %fv", i, anal_get_pin_mv(i));
 344              		.loc 1 120 5 view .LVU93
 345              	.LBB9:
 120:Core/Src/main.c ****       logger_log(LOGGER_INFO, "anal %d: %fv", i, anal_get_pin_mv(i));
 346              		.loc 1 120 9 view .LVU94
 120:Core/Src/main.c ****       logger_log(LOGGER_INFO, "anal %d: %fv", i, anal_get_pin_mv(i));
 347              		.loc 1 120 13 is_stmt 0 view .LVU95
 348 0080 0024     		movs	r4, #0
 120:Core/Src/main.c ****       logger_log(LOGGER_INFO, "anal %d: %fv", i, anal_get_pin_mv(i));
 349              		.loc 1 120 5 view .LVU96
 350 0082 F7E7     		b	.L14
 351              	.L19:
 352              		.align	2
 353              	.L18:
 354 0084 00000000 		.word	htim2
 355 0088 00000000 		.word	.LC0
 356 008c 00000000 		.word	logger_handle
 357              	.LBE9:
 358              		.cfi_endproc
 359              	.LFE235:
 361              		.text
 362              	.Letext0:
 363              		.file 3 "/usr/arm-none-eabi/include/machine/_default_types.h"
 364              		.file 4 "/usr/arm-none-eabi/include/sys/_stdint.h"
 365              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f446xx.h"
 366              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 367              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 368              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 369              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
ARM GAS  /tmp/cciI3Ykx.s 			page 15


 370              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 371              		.file 11 "Lib/stmlibs/stmlibs_status.h"
 372              		.file 12 "Lib/stmlibs/logger/logger.h"
 373              		.file 13 "Core/Inc/tim.h"
 374              		.file 14 "Core/Inc/logger_wrapper.h"
 375              		.file 15 "Core/Inc/anal.h"
 376              		.file 16 "Core/Inc/can_send_timebase.h"
 377              		.file 17 "Core/Inc/can_utils.h"
 378              		.file 18 "Core/Inc/adc.h"
 379              		.file 19 "Core/Inc/usart.h"
 380              		.file 20 "Core/Inc/spi.h"
 381              		.file 21 "Core/Inc/can.h"
 382              		.file 22 "Core/Inc/dma.h"
 383              		.file 23 "Core/Inc/gpio.h"
 384              		.file 24 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_pwr_ex.h"
 385              		.file 25 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 386              		.file 26 "<built-in>"
ARM GAS  /tmp/cciI3Ykx.s 			page 16


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
     /tmp/cciI3Ykx.s:21     .text.Error_Handler:00000000 $t
     /tmp/cciI3Ykx.s:27     .text.Error_Handler:00000000 Error_Handler
     /tmp/cciI3Ykx.s:59     .text.SystemClock_Config:00000000 $t
     /tmp/cciI3Ykx.s:65     .text.SystemClock_Config:00000000 SystemClock_Config
     /tmp/cciI3Ykx.s:221    .text.SystemClock_Config:000000ac $d
     /tmp/cciI3Ykx.s:227    .rodata.main.str1.4:00000000 $d
     /tmp/cciI3Ykx.s:232    .text.main:00000000 $t
     /tmp/cciI3Ykx.s:238    .text.main:00000000 main
     /tmp/cciI3Ykx.s:354    .text.main:00000084 $d

UNDEFINED SYMBOLS
memset
HAL_RCC_OscConfig
HAL_PWREx_EnableOverDrive
HAL_RCC_ClockConfig
__aeabi_f2d
HAL_Init
MX_GPIO_Init
MX_DMA_Init
MX_ADC1_Init
MX_CAN1_Init
MX_SPI2_Init
MX_SPI3_Init
MX_UART5_Init
MX_USART1_UART_Init
MX_ADC3_Init
MX_TIM12_Init
MX_TIM2_Init
MX_TIM6_Init
HAL_TIM_Base_Start
anal_init
logger_init
can_init
can_send_timebase_init
anal_get_pin_mv
LOGGER_log
logger_routine
can_send_timebase_routine
htim2
logger_handle
