ARM GAS  /tmp/ccBhNFpU.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"adc.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/adc.c"
  20              		.section	.text.MX_ADC1_Init,"ax",%progbits
  21              		.align	1
  22              		.global	MX_ADC1_Init
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	MX_ADC1_Init:
  28              	.LFB235:
   1:Core/Src/adc.c **** /* USER CODE BEGIN Header */
   2:Core/Src/adc.c **** /**
   3:Core/Src/adc.c ****   ******************************************************************************
   4:Core/Src/adc.c ****   * @file    adc.c
   5:Core/Src/adc.c ****   * @brief   This file provides code for the configuration
   6:Core/Src/adc.c ****   *          of the ADC instances.
   7:Core/Src/adc.c ****   ******************************************************************************
   8:Core/Src/adc.c ****   * @attention
   9:Core/Src/adc.c ****   *
  10:Core/Src/adc.c ****   * Copyright (c) 2023 STMicroelectronics.
  11:Core/Src/adc.c ****   * All rights reserved.
  12:Core/Src/adc.c ****   *
  13:Core/Src/adc.c ****   * This software is licensed under terms that can be found in the LICENSE file
  14:Core/Src/adc.c ****   * in the root directory of this software component.
  15:Core/Src/adc.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  16:Core/Src/adc.c ****   *
  17:Core/Src/adc.c ****   ******************************************************************************
  18:Core/Src/adc.c ****   */
  19:Core/Src/adc.c **** /* USER CODE END Header */
  20:Core/Src/adc.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/adc.c **** #include "adc.h"
  22:Core/Src/adc.c **** 
  23:Core/Src/adc.c **** /* USER CODE BEGIN 0 */
  24:Core/Src/adc.c **** #include "anal.h"
  25:Core/Src/adc.c **** /* USER CODE END 0 */
  26:Core/Src/adc.c **** 
  27:Core/Src/adc.c **** ADC_HandleTypeDef hadc1;
  28:Core/Src/adc.c **** ADC_HandleTypeDef hadc3;
  29:Core/Src/adc.c **** DMA_HandleTypeDef hdma_adc1;
  30:Core/Src/adc.c **** 
ARM GAS  /tmp/ccBhNFpU.s 			page 2


  31:Core/Src/adc.c **** /* ADC1 init function */
  32:Core/Src/adc.c **** void MX_ADC1_Init(void)
  33:Core/Src/adc.c **** {
  29              		.loc 1 33 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 16
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33 0000 00B5     		push	{lr}
  34              		.cfi_def_cfa_offset 4
  35              		.cfi_offset 14, -4
  36 0002 85B0     		sub	sp, sp, #20
  37              		.cfi_def_cfa_offset 24
  34:Core/Src/adc.c **** 
  35:Core/Src/adc.c ****   /* USER CODE BEGIN ADC1_Init 0 */
  36:Core/Src/adc.c **** 
  37:Core/Src/adc.c ****   /* USER CODE END ADC1_Init 0 */
  38:Core/Src/adc.c **** 
  39:Core/Src/adc.c ****   ADC_ChannelConfTypeDef sConfig = {0};
  38              		.loc 1 39 3 view .LVU1
  39              		.loc 1 39 26 is_stmt 0 view .LVU2
  40 0004 0023     		movs	r3, #0
  41 0006 0093     		str	r3, [sp]
  42 0008 0193     		str	r3, [sp, #4]
  43 000a 0293     		str	r3, [sp, #8]
  44 000c 0393     		str	r3, [sp, #12]
  40:Core/Src/adc.c **** 
  41:Core/Src/adc.c ****   /* USER CODE BEGIN ADC1_Init 1 */
  42:Core/Src/adc.c **** 
  43:Core/Src/adc.c ****   /* USER CODE END ADC1_Init 1 */
  44:Core/Src/adc.c **** 
  45:Core/Src/adc.c ****   /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of con
  46:Core/Src/adc.c ****   */
  47:Core/Src/adc.c ****   hadc1.Instance = ADC1;
  45              		.loc 1 47 3 is_stmt 1 view .LVU3
  46              		.loc 1 47 18 is_stmt 0 view .LVU4
  47 000e 6548     		ldr	r0, .L31
  48 0010 654A     		ldr	r2, .L31+4
  49 0012 0260     		str	r2, [r0]
  48:Core/Src/adc.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
  50              		.loc 1 48 3 is_stmt 1 view .LVU5
  51              		.loc 1 48 29 is_stmt 0 view .LVU6
  52 0014 4FF48032 		mov	r2, #65536
  53 0018 4260     		str	r2, [r0, #4]
  49:Core/Src/adc.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
  54              		.loc 1 49 3 is_stmt 1 view .LVU7
  55              		.loc 1 49 25 is_stmt 0 view .LVU8
  56 001a 8360     		str	r3, [r0, #8]
  50:Core/Src/adc.c ****   hadc1.Init.ScanConvMode = ENABLE;
  57              		.loc 1 50 3 is_stmt 1 view .LVU9
  58              		.loc 1 50 27 is_stmt 0 view .LVU10
  59 001c 0122     		movs	r2, #1
  60 001e 0261     		str	r2, [r0, #16]
  51:Core/Src/adc.c ****   hadc1.Init.ContinuousConvMode = DISABLE;
  61              		.loc 1 51 3 is_stmt 1 view .LVU11
  62              		.loc 1 51 33 is_stmt 0 view .LVU12
  63 0020 0376     		strb	r3, [r0, #24]
  52:Core/Src/adc.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
ARM GAS  /tmp/ccBhNFpU.s 			page 3


  64              		.loc 1 52 3 is_stmt 1 view .LVU13
  65              		.loc 1 52 36 is_stmt 0 view .LVU14
  66 0022 80F82030 		strb	r3, [r0, #32]
  53:Core/Src/adc.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_RISINGFALLING;
  67              		.loc 1 53 3 is_stmt 1 view .LVU15
  68              		.loc 1 53 35 is_stmt 0 view .LVU16
  69 0026 4FF04051 		mov	r1, #805306368
  70 002a C162     		str	r1, [r0, #44]
  54:Core/Src/adc.c ****   hadc1.Init.ExternalTrigConv = ADC_EXTERNALTRIGCONV_T2_TRGO;
  71              		.loc 1 54 3 is_stmt 1 view .LVU17
  72              		.loc 1 54 31 is_stmt 0 view .LVU18
  73 002c 4FF0C061 		mov	r1, #100663296
  74 0030 8162     		str	r1, [r0, #40]
  55:Core/Src/adc.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
  75              		.loc 1 55 3 is_stmt 1 view .LVU19
  76              		.loc 1 55 24 is_stmt 0 view .LVU20
  77 0032 C360     		str	r3, [r0, #12]
  56:Core/Src/adc.c ****   hadc1.Init.NbrOfConversion = 13;
  78              		.loc 1 56 3 is_stmt 1 view .LVU21
  79              		.loc 1 56 30 is_stmt 0 view .LVU22
  80 0034 0D23     		movs	r3, #13
  81 0036 C361     		str	r3, [r0, #28]
  57:Core/Src/adc.c ****   hadc1.Init.DMAContinuousRequests = ENABLE;
  82              		.loc 1 57 3 is_stmt 1 view .LVU23
  83              		.loc 1 57 36 is_stmt 0 view .LVU24
  84 0038 80F83020 		strb	r2, [r0, #48]
  58:Core/Src/adc.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
  85              		.loc 1 58 3 is_stmt 1 view .LVU25
  86              		.loc 1 58 27 is_stmt 0 view .LVU26
  87 003c 4261     		str	r2, [r0, #20]
  59:Core/Src/adc.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
  88              		.loc 1 59 3 is_stmt 1 view .LVU27
  89              		.loc 1 59 7 is_stmt 0 view .LVU28
  90 003e FFF7FEFF 		bl	HAL_ADC_Init
  91              	.LVL0:
  92              		.loc 1 59 6 discriminator 1 view .LVU29
  93 0042 0028     		cmp	r0, #0
  94 0044 40F08480 		bne	.L17
  95              	.L2:
  60:Core/Src/adc.c ****   {
  61:Core/Src/adc.c ****     Error_Handler();
  62:Core/Src/adc.c ****   }
  63:Core/Src/adc.c **** 
  64:Core/Src/adc.c ****   /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and it
  65:Core/Src/adc.c ****   */
  66:Core/Src/adc.c ****   sConfig.Channel = ADC_CHANNEL_0;
  96              		.loc 1 66 3 is_stmt 1 view .LVU30
  97              		.loc 1 66 19 is_stmt 0 view .LVU31
  98 0048 0023     		movs	r3, #0
  99 004a 0093     		str	r3, [sp]
  67:Core/Src/adc.c ****   sConfig.Rank = 1;
 100              		.loc 1 67 3 is_stmt 1 view .LVU32
 101              		.loc 1 67 16 is_stmt 0 view .LVU33
 102 004c 0123     		movs	r3, #1
 103 004e 0193     		str	r3, [sp, #4]
  68:Core/Src/adc.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_480CYCLES;
 104              		.loc 1 68 3 is_stmt 1 view .LVU34
ARM GAS  /tmp/ccBhNFpU.s 			page 4


 105              		.loc 1 68 24 is_stmt 0 view .LVU35
 106 0050 0723     		movs	r3, #7
 107 0052 0293     		str	r3, [sp, #8]
  69:Core/Src/adc.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 108              		.loc 1 69 3 is_stmt 1 view .LVU36
 109              		.loc 1 69 7 is_stmt 0 view .LVU37
 110 0054 6946     		mov	r1, sp
 111 0056 5348     		ldr	r0, .L31
 112 0058 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 113              	.LVL1:
 114              		.loc 1 69 6 discriminator 1 view .LVU38
 115 005c 0028     		cmp	r0, #0
 116 005e 7AD1     		bne	.L18
 117              	.L3:
  70:Core/Src/adc.c ****   {
  71:Core/Src/adc.c ****     Error_Handler();
  72:Core/Src/adc.c ****   }
  73:Core/Src/adc.c **** 
  74:Core/Src/adc.c ****   /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and it
  75:Core/Src/adc.c ****   */
  76:Core/Src/adc.c ****   sConfig.Channel = ADC_CHANNEL_1;
 118              		.loc 1 76 3 is_stmt 1 view .LVU39
 119              		.loc 1 76 19 is_stmt 0 view .LVU40
 120 0060 0123     		movs	r3, #1
 121 0062 0093     		str	r3, [sp]
  77:Core/Src/adc.c ****   sConfig.Rank = 2;
 122              		.loc 1 77 3 is_stmt 1 view .LVU41
 123              		.loc 1 77 16 is_stmt 0 view .LVU42
 124 0064 0223     		movs	r3, #2
 125 0066 0193     		str	r3, [sp, #4]
  78:Core/Src/adc.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 126              		.loc 1 78 3 is_stmt 1 view .LVU43
 127              		.loc 1 78 7 is_stmt 0 view .LVU44
 128 0068 6946     		mov	r1, sp
 129 006a 4E48     		ldr	r0, .L31
 130 006c FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 131              	.LVL2:
 132              		.loc 1 78 6 discriminator 1 view .LVU45
 133 0070 0028     		cmp	r0, #0
 134 0072 73D1     		bne	.L19
 135              	.L4:
  79:Core/Src/adc.c ****   {
  80:Core/Src/adc.c ****     Error_Handler();
  81:Core/Src/adc.c ****   }
  82:Core/Src/adc.c **** 
  83:Core/Src/adc.c ****   /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and it
  84:Core/Src/adc.c ****   */
  85:Core/Src/adc.c ****   sConfig.Channel = ADC_CHANNEL_2;
 136              		.loc 1 85 3 is_stmt 1 view .LVU46
 137              		.loc 1 85 19 is_stmt 0 view .LVU47
 138 0074 0223     		movs	r3, #2
 139 0076 0093     		str	r3, [sp]
  86:Core/Src/adc.c ****   sConfig.Rank = 3;
 140              		.loc 1 86 3 is_stmt 1 view .LVU48
 141              		.loc 1 86 16 is_stmt 0 view .LVU49
 142 0078 0323     		movs	r3, #3
 143 007a 0193     		str	r3, [sp, #4]
ARM GAS  /tmp/ccBhNFpU.s 			page 5


  87:Core/Src/adc.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 144              		.loc 1 87 3 is_stmt 1 view .LVU50
 145              		.loc 1 87 7 is_stmt 0 view .LVU51
 146 007c 6946     		mov	r1, sp
 147 007e 4948     		ldr	r0, .L31
 148 0080 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 149              	.LVL3:
 150              		.loc 1 87 6 discriminator 1 view .LVU52
 151 0084 0028     		cmp	r0, #0
 152 0086 6CD1     		bne	.L20
 153              	.L5:
  88:Core/Src/adc.c ****   {
  89:Core/Src/adc.c ****     Error_Handler();
  90:Core/Src/adc.c ****   }
  91:Core/Src/adc.c **** 
  92:Core/Src/adc.c ****   /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and it
  93:Core/Src/adc.c ****   */
  94:Core/Src/adc.c ****   sConfig.Channel = ADC_CHANNEL_3;
 154              		.loc 1 94 3 is_stmt 1 view .LVU53
 155              		.loc 1 94 19 is_stmt 0 view .LVU54
 156 0088 0323     		movs	r3, #3
 157 008a 0093     		str	r3, [sp]
  95:Core/Src/adc.c ****   sConfig.Rank = 4;
 158              		.loc 1 95 3 is_stmt 1 view .LVU55
 159              		.loc 1 95 16 is_stmt 0 view .LVU56
 160 008c 0423     		movs	r3, #4
 161 008e 0193     		str	r3, [sp, #4]
  96:Core/Src/adc.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 162              		.loc 1 96 3 is_stmt 1 view .LVU57
 163              		.loc 1 96 7 is_stmt 0 view .LVU58
 164 0090 6946     		mov	r1, sp
 165 0092 4448     		ldr	r0, .L31
 166 0094 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 167              	.LVL4:
 168              		.loc 1 96 6 discriminator 1 view .LVU59
 169 0098 0028     		cmp	r0, #0
 170 009a 65D1     		bne	.L21
 171              	.L6:
  97:Core/Src/adc.c ****   {
  98:Core/Src/adc.c ****     Error_Handler();
  99:Core/Src/adc.c ****   }
 100:Core/Src/adc.c **** 
 101:Core/Src/adc.c ****   /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and it
 102:Core/Src/adc.c ****   */
 103:Core/Src/adc.c ****   sConfig.Channel = ADC_CHANNEL_4;
 172              		.loc 1 103 3 is_stmt 1 view .LVU60
 173              		.loc 1 103 19 is_stmt 0 view .LVU61
 174 009c 0423     		movs	r3, #4
 175 009e 0093     		str	r3, [sp]
 104:Core/Src/adc.c ****   sConfig.Rank = 5;
 176              		.loc 1 104 3 is_stmt 1 view .LVU62
 177              		.loc 1 104 16 is_stmt 0 view .LVU63
 178 00a0 0523     		movs	r3, #5
 179 00a2 0193     		str	r3, [sp, #4]
 105:Core/Src/adc.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 180              		.loc 1 105 3 is_stmt 1 view .LVU64
 181              		.loc 1 105 7 is_stmt 0 view .LVU65
ARM GAS  /tmp/ccBhNFpU.s 			page 6


 182 00a4 6946     		mov	r1, sp
 183 00a6 3F48     		ldr	r0, .L31
 184 00a8 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 185              	.LVL5:
 186              		.loc 1 105 6 discriminator 1 view .LVU66
 187 00ac 0028     		cmp	r0, #0
 188 00ae 5ED1     		bne	.L22
 189              	.L7:
 106:Core/Src/adc.c ****   {
 107:Core/Src/adc.c ****     Error_Handler();
 108:Core/Src/adc.c ****   }
 109:Core/Src/adc.c **** 
 110:Core/Src/adc.c ****   /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and it
 111:Core/Src/adc.c ****   */
 112:Core/Src/adc.c ****   sConfig.Channel = ADC_CHANNEL_5;
 190              		.loc 1 112 3 is_stmt 1 view .LVU67
 191              		.loc 1 112 19 is_stmt 0 view .LVU68
 192 00b0 0523     		movs	r3, #5
 193 00b2 0093     		str	r3, [sp]
 113:Core/Src/adc.c ****   sConfig.Rank = 6;
 194              		.loc 1 113 3 is_stmt 1 view .LVU69
 195              		.loc 1 113 16 is_stmt 0 view .LVU70
 196 00b4 0623     		movs	r3, #6
 197 00b6 0193     		str	r3, [sp, #4]
 114:Core/Src/adc.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 198              		.loc 1 114 3 is_stmt 1 view .LVU71
 199              		.loc 1 114 7 is_stmt 0 view .LVU72
 200 00b8 6946     		mov	r1, sp
 201 00ba 3A48     		ldr	r0, .L31
 202 00bc FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 203              	.LVL6:
 204              		.loc 1 114 6 discriminator 1 view .LVU73
 205 00c0 0028     		cmp	r0, #0
 206 00c2 57D1     		bne	.L23
 207              	.L8:
 115:Core/Src/adc.c ****   {
 116:Core/Src/adc.c ****     Error_Handler();
 117:Core/Src/adc.c ****   }
 118:Core/Src/adc.c **** 
 119:Core/Src/adc.c ****   /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and it
 120:Core/Src/adc.c ****   */
 121:Core/Src/adc.c ****   sConfig.Channel = ADC_CHANNEL_6;
 208              		.loc 1 121 3 is_stmt 1 view .LVU74
 209              		.loc 1 121 19 is_stmt 0 view .LVU75
 210 00c4 0623     		movs	r3, #6
 211 00c6 0093     		str	r3, [sp]
 122:Core/Src/adc.c ****   sConfig.Rank = 7;
 212              		.loc 1 122 3 is_stmt 1 view .LVU76
 213              		.loc 1 122 16 is_stmt 0 view .LVU77
 214 00c8 0723     		movs	r3, #7
 215 00ca 0193     		str	r3, [sp, #4]
 123:Core/Src/adc.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 216              		.loc 1 123 3 is_stmt 1 view .LVU78
 217              		.loc 1 123 7 is_stmt 0 view .LVU79
 218 00cc 6946     		mov	r1, sp
 219 00ce 3548     		ldr	r0, .L31
 220 00d0 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
ARM GAS  /tmp/ccBhNFpU.s 			page 7


 221              	.LVL7:
 222              		.loc 1 123 6 discriminator 1 view .LVU80
 223 00d4 0028     		cmp	r0, #0
 224 00d6 50D1     		bne	.L24
 225              	.L9:
 124:Core/Src/adc.c ****   {
 125:Core/Src/adc.c ****     Error_Handler();
 126:Core/Src/adc.c ****   }
 127:Core/Src/adc.c **** 
 128:Core/Src/adc.c ****   /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and it
 129:Core/Src/adc.c ****   */
 130:Core/Src/adc.c ****   sConfig.Channel = ADC_CHANNEL_7;
 226              		.loc 1 130 3 is_stmt 1 view .LVU81
 227              		.loc 1 130 19 is_stmt 0 view .LVU82
 228 00d8 0723     		movs	r3, #7
 229 00da 0093     		str	r3, [sp]
 131:Core/Src/adc.c ****   sConfig.Rank = 8;
 230              		.loc 1 131 3 is_stmt 1 view .LVU83
 231              		.loc 1 131 16 is_stmt 0 view .LVU84
 232 00dc 0823     		movs	r3, #8
 233 00de 0193     		str	r3, [sp, #4]
 132:Core/Src/adc.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 234              		.loc 1 132 3 is_stmt 1 view .LVU85
 235              		.loc 1 132 7 is_stmt 0 view .LVU86
 236 00e0 6946     		mov	r1, sp
 237 00e2 3048     		ldr	r0, .L31
 238 00e4 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 239              	.LVL8:
 240              		.loc 1 132 6 discriminator 1 view .LVU87
 241 00e8 0028     		cmp	r0, #0
 242 00ea 49D1     		bne	.L25
 243              	.L10:
 133:Core/Src/adc.c ****   {
 134:Core/Src/adc.c ****     Error_Handler();
 135:Core/Src/adc.c ****   }
 136:Core/Src/adc.c **** 
 137:Core/Src/adc.c ****   /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and it
 138:Core/Src/adc.c ****   */
 139:Core/Src/adc.c ****   sConfig.Channel = ADC_CHANNEL_8;
 244              		.loc 1 139 3 is_stmt 1 view .LVU88
 245              		.loc 1 139 19 is_stmt 0 view .LVU89
 246 00ec 0823     		movs	r3, #8
 247 00ee 0093     		str	r3, [sp]
 140:Core/Src/adc.c ****   sConfig.Rank = 9;
 248              		.loc 1 140 3 is_stmt 1 view .LVU90
 249              		.loc 1 140 16 is_stmt 0 view .LVU91
 250 00f0 0923     		movs	r3, #9
 251 00f2 0193     		str	r3, [sp, #4]
 141:Core/Src/adc.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 252              		.loc 1 141 3 is_stmt 1 view .LVU92
 253              		.loc 1 141 7 is_stmt 0 view .LVU93
 254 00f4 6946     		mov	r1, sp
 255 00f6 2B48     		ldr	r0, .L31
 256 00f8 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 257              	.LVL9:
 258              		.loc 1 141 6 discriminator 1 view .LVU94
 259 00fc 0028     		cmp	r0, #0
ARM GAS  /tmp/ccBhNFpU.s 			page 8


 260 00fe 42D1     		bne	.L26
 261              	.L11:
 142:Core/Src/adc.c ****   {
 143:Core/Src/adc.c ****     Error_Handler();
 144:Core/Src/adc.c ****   }
 145:Core/Src/adc.c **** 
 146:Core/Src/adc.c ****   /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and it
 147:Core/Src/adc.c ****   */
 148:Core/Src/adc.c ****   sConfig.Channel = ADC_CHANNEL_9;
 262              		.loc 1 148 3 is_stmt 1 view .LVU95
 263              		.loc 1 148 19 is_stmt 0 view .LVU96
 264 0100 0923     		movs	r3, #9
 265 0102 0093     		str	r3, [sp]
 149:Core/Src/adc.c ****   sConfig.Rank = 10;
 266              		.loc 1 149 3 is_stmt 1 view .LVU97
 267              		.loc 1 149 16 is_stmt 0 view .LVU98
 268 0104 0A23     		movs	r3, #10
 269 0106 0193     		str	r3, [sp, #4]
 150:Core/Src/adc.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 270              		.loc 1 150 3 is_stmt 1 view .LVU99
 271              		.loc 1 150 7 is_stmt 0 view .LVU100
 272 0108 6946     		mov	r1, sp
 273 010a 2648     		ldr	r0, .L31
 274 010c FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 275              	.LVL10:
 276              		.loc 1 150 6 discriminator 1 view .LVU101
 277 0110 0028     		cmp	r0, #0
 278 0112 3BD1     		bne	.L27
 279              	.L12:
 151:Core/Src/adc.c ****   {
 152:Core/Src/adc.c ****     Error_Handler();
 153:Core/Src/adc.c ****   }
 154:Core/Src/adc.c **** 
 155:Core/Src/adc.c ****   /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and it
 156:Core/Src/adc.c ****   */
 157:Core/Src/adc.c ****   sConfig.Channel = ADC_CHANNEL_10;
 280              		.loc 1 157 3 is_stmt 1 view .LVU102
 281              		.loc 1 157 19 is_stmt 0 view .LVU103
 282 0114 0A23     		movs	r3, #10
 283 0116 0093     		str	r3, [sp]
 158:Core/Src/adc.c ****   sConfig.Rank = 11;
 284              		.loc 1 158 3 is_stmt 1 view .LVU104
 285              		.loc 1 158 16 is_stmt 0 view .LVU105
 286 0118 0B23     		movs	r3, #11
 287 011a 0193     		str	r3, [sp, #4]
 159:Core/Src/adc.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 288              		.loc 1 159 3 is_stmt 1 view .LVU106
 289              		.loc 1 159 7 is_stmt 0 view .LVU107
 290 011c 6946     		mov	r1, sp
 291 011e 2148     		ldr	r0, .L31
 292 0120 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 293              	.LVL11:
 294              		.loc 1 159 6 discriminator 1 view .LVU108
 295 0124 A8BB     		cbnz	r0, .L28
 296              	.L13:
 160:Core/Src/adc.c ****   {
 161:Core/Src/adc.c ****     Error_Handler();
ARM GAS  /tmp/ccBhNFpU.s 			page 9


 162:Core/Src/adc.c ****   }
 163:Core/Src/adc.c **** 
 164:Core/Src/adc.c ****   /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and it
 165:Core/Src/adc.c ****   */
 166:Core/Src/adc.c ****   sConfig.Channel = ADC_CHANNEL_14;
 297              		.loc 1 166 3 is_stmt 1 view .LVU109
 298              		.loc 1 166 19 is_stmt 0 view .LVU110
 299 0126 0E23     		movs	r3, #14
 300 0128 0093     		str	r3, [sp]
 167:Core/Src/adc.c ****   sConfig.Rank = 12;
 301              		.loc 1 167 3 is_stmt 1 view .LVU111
 302              		.loc 1 167 16 is_stmt 0 view .LVU112
 303 012a 0C23     		movs	r3, #12
 304 012c 0193     		str	r3, [sp, #4]
 168:Core/Src/adc.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 305              		.loc 1 168 3 is_stmt 1 view .LVU113
 306              		.loc 1 168 7 is_stmt 0 view .LVU114
 307 012e 6946     		mov	r1, sp
 308 0130 1C48     		ldr	r0, .L31
 309 0132 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 310              	.LVL12:
 311              		.loc 1 168 6 discriminator 1 view .LVU115
 312 0136 78BB     		cbnz	r0, .L29
 313              	.L14:
 169:Core/Src/adc.c ****   {
 170:Core/Src/adc.c ****     Error_Handler();
 171:Core/Src/adc.c ****   }
 172:Core/Src/adc.c **** 
 173:Core/Src/adc.c ****   /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and it
 174:Core/Src/adc.c ****   */
 175:Core/Src/adc.c ****   sConfig.Channel = ADC_CHANNEL_15;
 314              		.loc 1 175 3 is_stmt 1 view .LVU116
 315              		.loc 1 175 19 is_stmt 0 view .LVU117
 316 0138 0F23     		movs	r3, #15
 317 013a 0093     		str	r3, [sp]
 176:Core/Src/adc.c ****   sConfig.Rank = 13;
 318              		.loc 1 176 3 is_stmt 1 view .LVU118
 319              		.loc 1 176 16 is_stmt 0 view .LVU119
 320 013c 0D23     		movs	r3, #13
 321 013e 0193     		str	r3, [sp, #4]
 177:Core/Src/adc.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 322              		.loc 1 177 3 is_stmt 1 view .LVU120
 323              		.loc 1 177 7 is_stmt 0 view .LVU121
 324 0140 6946     		mov	r1, sp
 325 0142 1848     		ldr	r0, .L31
 326 0144 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 327              	.LVL13:
 328              		.loc 1 177 6 discriminator 1 view .LVU122
 329 0148 48BB     		cbnz	r0, .L30
 330              	.L1:
 178:Core/Src/adc.c ****   {
 179:Core/Src/adc.c ****     Error_Handler();
 180:Core/Src/adc.c ****   }
 181:Core/Src/adc.c ****   /* USER CODE BEGIN ADC1_Init 2 */
 182:Core/Src/adc.c **** 
 183:Core/Src/adc.c ****   /* USER CODE END ADC1_Init 2 */
 184:Core/Src/adc.c **** 
ARM GAS  /tmp/ccBhNFpU.s 			page 10


 185:Core/Src/adc.c **** }
 331              		.loc 1 185 1 view .LVU123
 332 014a 05B0     		add	sp, sp, #20
 333              		.cfi_remember_state
 334              		.cfi_def_cfa_offset 4
 335              		@ sp needed
 336 014c 5DF804FB 		ldr	pc, [sp], #4
 337              	.L17:
 338              		.cfi_restore_state
  61:Core/Src/adc.c ****   }
 339              		.loc 1 61 5 is_stmt 1 view .LVU124
 340 0150 FFF7FEFF 		bl	Error_Handler
 341              	.LVL14:
 342 0154 78E7     		b	.L2
 343              	.L18:
  71:Core/Src/adc.c ****   }
 344              		.loc 1 71 5 view .LVU125
 345 0156 FFF7FEFF 		bl	Error_Handler
 346              	.LVL15:
 347 015a 81E7     		b	.L3
 348              	.L19:
  80:Core/Src/adc.c ****   }
 349              		.loc 1 80 5 view .LVU126
 350 015c FFF7FEFF 		bl	Error_Handler
 351              	.LVL16:
 352 0160 88E7     		b	.L4
 353              	.L20:
  89:Core/Src/adc.c ****   }
 354              		.loc 1 89 5 view .LVU127
 355 0162 FFF7FEFF 		bl	Error_Handler
 356              	.LVL17:
 357 0166 8FE7     		b	.L5
 358              	.L21:
  98:Core/Src/adc.c ****   }
 359              		.loc 1 98 5 view .LVU128
 360 0168 FFF7FEFF 		bl	Error_Handler
 361              	.LVL18:
 362 016c 96E7     		b	.L6
 363              	.L22:
 107:Core/Src/adc.c ****   }
 364              		.loc 1 107 5 view .LVU129
 365 016e FFF7FEFF 		bl	Error_Handler
 366              	.LVL19:
 367 0172 9DE7     		b	.L7
 368              	.L23:
 116:Core/Src/adc.c ****   }
 369              		.loc 1 116 5 view .LVU130
 370 0174 FFF7FEFF 		bl	Error_Handler
 371              	.LVL20:
 372 0178 A4E7     		b	.L8
 373              	.L24:
 125:Core/Src/adc.c ****   }
 374              		.loc 1 125 5 view .LVU131
 375 017a FFF7FEFF 		bl	Error_Handler
 376              	.LVL21:
 377 017e ABE7     		b	.L9
 378              	.L25:
ARM GAS  /tmp/ccBhNFpU.s 			page 11


 134:Core/Src/adc.c ****   }
 379              		.loc 1 134 5 view .LVU132
 380 0180 FFF7FEFF 		bl	Error_Handler
 381              	.LVL22:
 382 0184 B2E7     		b	.L10
 383              	.L26:
 143:Core/Src/adc.c ****   }
 384              		.loc 1 143 5 view .LVU133
 385 0186 FFF7FEFF 		bl	Error_Handler
 386              	.LVL23:
 387 018a B9E7     		b	.L11
 388              	.L27:
 152:Core/Src/adc.c ****   }
 389              		.loc 1 152 5 view .LVU134
 390 018c FFF7FEFF 		bl	Error_Handler
 391              	.LVL24:
 392 0190 C0E7     		b	.L12
 393              	.L28:
 161:Core/Src/adc.c ****   }
 394              		.loc 1 161 5 view .LVU135
 395 0192 FFF7FEFF 		bl	Error_Handler
 396              	.LVL25:
 397 0196 C6E7     		b	.L13
 398              	.L29:
 170:Core/Src/adc.c ****   }
 399              		.loc 1 170 5 view .LVU136
 400 0198 FFF7FEFF 		bl	Error_Handler
 401              	.LVL26:
 402 019c CCE7     		b	.L14
 403              	.L30:
 179:Core/Src/adc.c ****   }
 404              		.loc 1 179 5 view .LVU137
 405 019e FFF7FEFF 		bl	Error_Handler
 406              	.LVL27:
 407              		.loc 1 185 1 is_stmt 0 view .LVU138
 408 01a2 D2E7     		b	.L1
 409              	.L32:
 410              		.align	2
 411              	.L31:
 412 01a4 00000000 		.word	hadc1
 413 01a8 00200140 		.word	1073815552
 414              		.cfi_endproc
 415              	.LFE235:
 417              		.section	.text.MX_ADC3_Init,"ax",%progbits
 418              		.align	1
 419              		.global	MX_ADC3_Init
 420              		.syntax unified
 421              		.thumb
 422              		.thumb_func
 424              	MX_ADC3_Init:
 425              	.LFB236:
 186:Core/Src/adc.c **** /* ADC3 init function */
 187:Core/Src/adc.c **** void MX_ADC3_Init(void)
 188:Core/Src/adc.c **** {
 426              		.loc 1 188 1 is_stmt 1 view -0
 427              		.cfi_startproc
 428              		@ args = 0, pretend = 0, frame = 16
ARM GAS  /tmp/ccBhNFpU.s 			page 12


 429              		@ frame_needed = 0, uses_anonymous_args = 0
 430 0000 00B5     		push	{lr}
 431              		.cfi_def_cfa_offset 4
 432              		.cfi_offset 14, -4
 433 0002 85B0     		sub	sp, sp, #20
 434              		.cfi_def_cfa_offset 24
 189:Core/Src/adc.c **** 
 190:Core/Src/adc.c ****   /* USER CODE BEGIN ADC3_Init 0 */
 191:Core/Src/adc.c **** 
 192:Core/Src/adc.c ****   /* USER CODE END ADC3_Init 0 */
 193:Core/Src/adc.c **** 
 194:Core/Src/adc.c ****   ADC_ChannelConfTypeDef sConfig = {0};
 435              		.loc 1 194 3 view .LVU140
 436              		.loc 1 194 26 is_stmt 0 view .LVU141
 437 0004 0023     		movs	r3, #0
 438 0006 0093     		str	r3, [sp]
 439 0008 0193     		str	r3, [sp, #4]
 440 000a 0293     		str	r3, [sp, #8]
 441 000c 0393     		str	r3, [sp, #12]
 195:Core/Src/adc.c **** 
 196:Core/Src/adc.c ****   /* USER CODE BEGIN ADC3_Init 1 */
 197:Core/Src/adc.c **** 
 198:Core/Src/adc.c ****   /* USER CODE END ADC3_Init 1 */
 199:Core/Src/adc.c **** 
 200:Core/Src/adc.c ****   /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of con
 201:Core/Src/adc.c ****   */
 202:Core/Src/adc.c ****   hadc3.Instance = ADC3;
 442              		.loc 1 202 3 is_stmt 1 view .LVU142
 443              		.loc 1 202 18 is_stmt 0 view .LVU143
 444 000e 1548     		ldr	r0, .L39
 445 0010 154A     		ldr	r2, .L39+4
 446 0012 0260     		str	r2, [r0]
 203:Core/Src/adc.c ****   hadc3.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 447              		.loc 1 203 3 is_stmt 1 view .LVU144
 448              		.loc 1 203 29 is_stmt 0 view .LVU145
 449 0014 4FF48032 		mov	r2, #65536
 450 0018 4260     		str	r2, [r0, #4]
 204:Core/Src/adc.c ****   hadc3.Init.Resolution = ADC_RESOLUTION_12B;
 451              		.loc 1 204 3 is_stmt 1 view .LVU146
 452              		.loc 1 204 25 is_stmt 0 view .LVU147
 453 001a 8360     		str	r3, [r0, #8]
 205:Core/Src/adc.c ****   hadc3.Init.ScanConvMode = DISABLE;
 454              		.loc 1 205 3 is_stmt 1 view .LVU148
 455              		.loc 1 205 27 is_stmt 0 view .LVU149
 456 001c 0361     		str	r3, [r0, #16]
 206:Core/Src/adc.c ****   hadc3.Init.ContinuousConvMode = DISABLE;
 457              		.loc 1 206 3 is_stmt 1 view .LVU150
 458              		.loc 1 206 33 is_stmt 0 view .LVU151
 459 001e 0376     		strb	r3, [r0, #24]
 207:Core/Src/adc.c ****   hadc3.Init.DiscontinuousConvMode = DISABLE;
 460              		.loc 1 207 3 is_stmt 1 view .LVU152
 461              		.loc 1 207 36 is_stmt 0 view .LVU153
 462 0020 80F82030 		strb	r3, [r0, #32]
 208:Core/Src/adc.c ****   hadc3.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 463              		.loc 1 208 3 is_stmt 1 view .LVU154
 464              		.loc 1 208 35 is_stmt 0 view .LVU155
 465 0024 C362     		str	r3, [r0, #44]
ARM GAS  /tmp/ccBhNFpU.s 			page 13


 209:Core/Src/adc.c ****   hadc3.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 466              		.loc 1 209 3 is_stmt 1 view .LVU156
 467              		.loc 1 209 31 is_stmt 0 view .LVU157
 468 0026 114A     		ldr	r2, .L39+8
 469 0028 8262     		str	r2, [r0, #40]
 210:Core/Src/adc.c ****   hadc3.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 470              		.loc 1 210 3 is_stmt 1 view .LVU158
 471              		.loc 1 210 24 is_stmt 0 view .LVU159
 472 002a C360     		str	r3, [r0, #12]
 211:Core/Src/adc.c ****   hadc3.Init.NbrOfConversion = 1;
 473              		.loc 1 211 3 is_stmt 1 view .LVU160
 474              		.loc 1 211 30 is_stmt 0 view .LVU161
 475 002c 0122     		movs	r2, #1
 476 002e C261     		str	r2, [r0, #28]
 212:Core/Src/adc.c ****   hadc3.Init.DMAContinuousRequests = DISABLE;
 477              		.loc 1 212 3 is_stmt 1 view .LVU162
 478              		.loc 1 212 36 is_stmt 0 view .LVU163
 479 0030 80F83030 		strb	r3, [r0, #48]
 213:Core/Src/adc.c ****   hadc3.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 480              		.loc 1 213 3 is_stmt 1 view .LVU164
 481              		.loc 1 213 27 is_stmt 0 view .LVU165
 482 0034 4261     		str	r2, [r0, #20]
 214:Core/Src/adc.c ****   if (HAL_ADC_Init(&hadc3) != HAL_OK)
 483              		.loc 1 214 3 is_stmt 1 view .LVU166
 484              		.loc 1 214 7 is_stmt 0 view .LVU167
 485 0036 FFF7FEFF 		bl	HAL_ADC_Init
 486              	.LVL28:
 487              		.loc 1 214 6 discriminator 1 view .LVU168
 488 003a 68B9     		cbnz	r0, .L37
 489              	.L34:
 215:Core/Src/adc.c ****   {
 216:Core/Src/adc.c ****     Error_Handler();
 217:Core/Src/adc.c ****   }
 218:Core/Src/adc.c **** 
 219:Core/Src/adc.c ****   /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and it
 220:Core/Src/adc.c ****   */
 221:Core/Src/adc.c ****   sConfig.Channel = ADC_CHANNEL_12;
 490              		.loc 1 221 3 is_stmt 1 view .LVU169
 491              		.loc 1 221 19 is_stmt 0 view .LVU170
 492 003c 0C23     		movs	r3, #12
 493 003e 0093     		str	r3, [sp]
 222:Core/Src/adc.c ****   sConfig.Rank = 1;
 494              		.loc 1 222 3 is_stmt 1 view .LVU171
 495              		.loc 1 222 16 is_stmt 0 view .LVU172
 496 0040 0123     		movs	r3, #1
 497 0042 0193     		str	r3, [sp, #4]
 223:Core/Src/adc.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 498              		.loc 1 223 3 is_stmt 1 view .LVU173
 499              		.loc 1 223 24 is_stmt 0 view .LVU174
 500 0044 0023     		movs	r3, #0
 501 0046 0293     		str	r3, [sp, #8]
 224:Core/Src/adc.c ****   if (HAL_ADC_ConfigChannel(&hadc3, &sConfig) != HAL_OK)
 502              		.loc 1 224 3 is_stmt 1 view .LVU175
 503              		.loc 1 224 7 is_stmt 0 view .LVU176
 504 0048 6946     		mov	r1, sp
 505 004a 0648     		ldr	r0, .L39
 506 004c FFF7FEFF 		bl	HAL_ADC_ConfigChannel
ARM GAS  /tmp/ccBhNFpU.s 			page 14


 507              	.LVL29:
 508              		.loc 1 224 6 discriminator 1 view .LVU177
 509 0050 28B9     		cbnz	r0, .L38
 510              	.L33:
 225:Core/Src/adc.c ****   {
 226:Core/Src/adc.c ****     Error_Handler();
 227:Core/Src/adc.c ****   }
 228:Core/Src/adc.c ****   /* USER CODE BEGIN ADC3_Init 2 */
 229:Core/Src/adc.c **** 
 230:Core/Src/adc.c ****   /* USER CODE END ADC3_Init 2 */
 231:Core/Src/adc.c **** 
 232:Core/Src/adc.c **** }
 511              		.loc 1 232 1 view .LVU178
 512 0052 05B0     		add	sp, sp, #20
 513              		.cfi_remember_state
 514              		.cfi_def_cfa_offset 4
 515              		@ sp needed
 516 0054 5DF804FB 		ldr	pc, [sp], #4
 517              	.L37:
 518              		.cfi_restore_state
 216:Core/Src/adc.c ****   }
 519              		.loc 1 216 5 is_stmt 1 view .LVU179
 520 0058 FFF7FEFF 		bl	Error_Handler
 521              	.LVL30:
 522 005c EEE7     		b	.L34
 523              	.L38:
 226:Core/Src/adc.c ****   }
 524              		.loc 1 226 5 view .LVU180
 525 005e FFF7FEFF 		bl	Error_Handler
 526              	.LVL31:
 527              		.loc 1 232 1 is_stmt 0 view .LVU181
 528 0062 F6E7     		b	.L33
 529              	.L40:
 530              		.align	2
 531              	.L39:
 532 0064 00000000 		.word	hadc3
 533 0068 00220140 		.word	1073816064
 534 006c 0100000F 		.word	251658241
 535              		.cfi_endproc
 536              	.LFE236:
 538              		.section	.text.HAL_ADC_MspInit,"ax",%progbits
 539              		.align	1
 540              		.global	HAL_ADC_MspInit
 541              		.syntax unified
 542              		.thumb
 543              		.thumb_func
 545              	HAL_ADC_MspInit:
 546              	.LVL32:
 547              	.LFB237:
 233:Core/Src/adc.c **** 
 234:Core/Src/adc.c **** void HAL_ADC_MspInit(ADC_HandleTypeDef* adcHandle)
 235:Core/Src/adc.c **** {
 548              		.loc 1 235 1 is_stmt 1 view -0
 549              		.cfi_startproc
 550              		@ args = 0, pretend = 0, frame = 48
 551              		@ frame_needed = 0, uses_anonymous_args = 0
 552              		.loc 1 235 1 is_stmt 0 view .LVU183
ARM GAS  /tmp/ccBhNFpU.s 			page 15


 553 0000 70B5     		push	{r4, r5, r6, lr}
 554              		.cfi_def_cfa_offset 16
 555              		.cfi_offset 4, -16
 556              		.cfi_offset 5, -12
 557              		.cfi_offset 6, -8
 558              		.cfi_offset 14, -4
 559 0002 8CB0     		sub	sp, sp, #48
 560              		.cfi_def_cfa_offset 64
 236:Core/Src/adc.c **** 
 237:Core/Src/adc.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 561              		.loc 1 237 3 is_stmt 1 view .LVU184
 562              		.loc 1 237 20 is_stmt 0 view .LVU185
 563 0004 0023     		movs	r3, #0
 564 0006 0793     		str	r3, [sp, #28]
 565 0008 0893     		str	r3, [sp, #32]
 566 000a 0993     		str	r3, [sp, #36]
 567 000c 0A93     		str	r3, [sp, #40]
 568 000e 0B93     		str	r3, [sp, #44]
 238:Core/Src/adc.c ****   if(adcHandle->Instance==ADC1)
 569              		.loc 1 238 3 is_stmt 1 view .LVU186
 570              		.loc 1 238 15 is_stmt 0 view .LVU187
 571 0010 0368     		ldr	r3, [r0]
 572              		.loc 1 238 5 view .LVU188
 573 0012 4B4A     		ldr	r2, .L49
 574 0014 9342     		cmp	r3, r2
 575 0016 04D0     		beq	.L46
 239:Core/Src/adc.c ****   {
 240:Core/Src/adc.c ****   /* USER CODE BEGIN ADC1_MspInit 0 */
 241:Core/Src/adc.c **** 
 242:Core/Src/adc.c ****   /* USER CODE END ADC1_MspInit 0 */
 243:Core/Src/adc.c ****     /* ADC1 clock enable */
 244:Core/Src/adc.c ****     __HAL_RCC_ADC1_CLK_ENABLE();
 245:Core/Src/adc.c **** 
 246:Core/Src/adc.c ****     __HAL_RCC_GPIOC_CLK_ENABLE();
 247:Core/Src/adc.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 248:Core/Src/adc.c ****     __HAL_RCC_GPIOB_CLK_ENABLE();
 249:Core/Src/adc.c ****     /**ADC1 GPIO Configuration
 250:Core/Src/adc.c ****     PC0     ------> ADC1_IN10
 251:Core/Src/adc.c ****     PA0-WKUP     ------> ADC1_IN0
 252:Core/Src/adc.c ****     PA1     ------> ADC1_IN1
 253:Core/Src/adc.c ****     PA2     ------> ADC1_IN2
 254:Core/Src/adc.c ****     PA3     ------> ADC1_IN3
 255:Core/Src/adc.c ****     PA4     ------> ADC1_IN4
 256:Core/Src/adc.c ****     PA5     ------> ADC1_IN5
 257:Core/Src/adc.c ****     PA6     ------> ADC1_IN6
 258:Core/Src/adc.c ****     PA7     ------> ADC1_IN7
 259:Core/Src/adc.c ****     PC4     ------> ADC1_IN14
 260:Core/Src/adc.c ****     PC5     ------> ADC1_IN15
 261:Core/Src/adc.c ****     PB0     ------> ADC1_IN8
 262:Core/Src/adc.c ****     PB1     ------> ADC1_IN9
 263:Core/Src/adc.c ****     */
 264:Core/Src/adc.c ****     GPIO_InitStruct.Pin = ANAL11_ADC_IN10_Pin|POT1_ADC_IN14_Pin|POT2_ADC_IN15_Pin;
 265:Core/Src/adc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 266:Core/Src/adc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 267:Core/Src/adc.c ****     HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 268:Core/Src/adc.c **** 
 269:Core/Src/adc.c ****     GPIO_InitStruct.Pin = ANAL1_ADC_IN0_Pin|ANAL2_ADC_IN1_Pin|ANAL3_ADC_IN2_Pin|ANAL4_ADC_IN3_Pin
ARM GAS  /tmp/ccBhNFpU.s 			page 16


 270:Core/Src/adc.c ****                           |ANAL5_ADC_IN4_Pin|ANAL6_ADC_IN5_Pin|ANAL7_ADC_IN6_Pin|ANAL8_ADC_IN7_Pin;
 271:Core/Src/adc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 272:Core/Src/adc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 273:Core/Src/adc.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 274:Core/Src/adc.c **** 
 275:Core/Src/adc.c ****     GPIO_InitStruct.Pin = ANAL9_ADC_IN8_Pin|ANAL10_ADC_IN9_Pin;
 276:Core/Src/adc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 277:Core/Src/adc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 278:Core/Src/adc.c ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 279:Core/Src/adc.c **** 
 280:Core/Src/adc.c ****     /* ADC1 DMA Init */
 281:Core/Src/adc.c ****     /* ADC1 Init */
 282:Core/Src/adc.c ****     hdma_adc1.Instance = DMA2_Stream0;
 283:Core/Src/adc.c ****     hdma_adc1.Init.Channel = DMA_CHANNEL_0;
 284:Core/Src/adc.c ****     hdma_adc1.Init.Direction = DMA_PERIPH_TO_MEMORY;
 285:Core/Src/adc.c ****     hdma_adc1.Init.PeriphInc = DMA_PINC_DISABLE;
 286:Core/Src/adc.c ****     hdma_adc1.Init.MemInc = DMA_MINC_ENABLE;
 287:Core/Src/adc.c ****     hdma_adc1.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 288:Core/Src/adc.c ****     hdma_adc1.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 289:Core/Src/adc.c ****     hdma_adc1.Init.Mode = DMA_CIRCULAR;
 290:Core/Src/adc.c ****     hdma_adc1.Init.Priority = DMA_PRIORITY_LOW;
 291:Core/Src/adc.c ****     hdma_adc1.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 292:Core/Src/adc.c ****     if (HAL_DMA_Init(&hdma_adc1) != HAL_OK)
 293:Core/Src/adc.c ****     {
 294:Core/Src/adc.c ****       Error_Handler();
 295:Core/Src/adc.c ****     }
 296:Core/Src/adc.c **** 
 297:Core/Src/adc.c ****     __HAL_LINKDMA(adcHandle,DMA_Handle,hdma_adc1);
 298:Core/Src/adc.c **** 
 299:Core/Src/adc.c ****     /* ADC1 interrupt Init */
 300:Core/Src/adc.c ****     HAL_NVIC_SetPriority(ADC_IRQn, 0, 0);
 301:Core/Src/adc.c ****     HAL_NVIC_EnableIRQ(ADC_IRQn);
 302:Core/Src/adc.c ****   /* USER CODE BEGIN ADC1_MspInit 1 */
 303:Core/Src/adc.c **** 
 304:Core/Src/adc.c ****   /* USER CODE END ADC1_MspInit 1 */
 305:Core/Src/adc.c ****   }
 306:Core/Src/adc.c ****   else if(adcHandle->Instance==ADC3)
 576              		.loc 1 306 8 is_stmt 1 view .LVU189
 577              		.loc 1 306 10 is_stmt 0 view .LVU190
 578 0018 4A4A     		ldr	r2, .L49+4
 579 001a 9342     		cmp	r3, r2
 580 001c 69D0     		beq	.L47
 581              	.LVL33:
 582              	.L41:
 307:Core/Src/adc.c ****   {
 308:Core/Src/adc.c ****   /* USER CODE BEGIN ADC3_MspInit 0 */
 309:Core/Src/adc.c **** 
 310:Core/Src/adc.c ****   /* USER CODE END ADC3_MspInit 0 */
 311:Core/Src/adc.c ****     /* ADC3 clock enable */
 312:Core/Src/adc.c ****     __HAL_RCC_ADC3_CLK_ENABLE();
 313:Core/Src/adc.c **** 
 314:Core/Src/adc.c ****     __HAL_RCC_GPIOC_CLK_ENABLE();
 315:Core/Src/adc.c ****     /**ADC3 GPIO Configuration
 316:Core/Src/adc.c ****     PC2     ------> ADC3_IN12
 317:Core/Src/adc.c ****     PC3     ------> ADC3_IN13
 318:Core/Src/adc.c ****     */
 319:Core/Src/adc.c ****     GPIO_InitStruct.Pin = REF_5V_ADC_IN12_Pin|REF_24V_ADC_IN13_Pin;
ARM GAS  /tmp/ccBhNFpU.s 			page 17


 320:Core/Src/adc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 321:Core/Src/adc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 322:Core/Src/adc.c ****     HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 323:Core/Src/adc.c **** 
 324:Core/Src/adc.c ****     /* ADC3 interrupt Init */
 325:Core/Src/adc.c ****     HAL_NVIC_SetPriority(ADC_IRQn, 0, 0);
 326:Core/Src/adc.c ****     HAL_NVIC_EnableIRQ(ADC_IRQn);
 327:Core/Src/adc.c ****   /* USER CODE BEGIN ADC3_MspInit 1 */
 328:Core/Src/adc.c **** 
 329:Core/Src/adc.c ****   /* USER CODE END ADC3_MspInit 1 */
 330:Core/Src/adc.c ****   }
 331:Core/Src/adc.c **** }
 583              		.loc 1 331 1 view .LVU191
 584 001e 0CB0     		add	sp, sp, #48
 585              		.cfi_remember_state
 586              		.cfi_def_cfa_offset 16
 587              		@ sp needed
 588 0020 70BD     		pop	{r4, r5, r6, pc}
 589              	.LVL34:
 590              	.L46:
 591              		.cfi_restore_state
 592              		.loc 1 331 1 view .LVU192
 593 0022 0446     		mov	r4, r0
 244:Core/Src/adc.c **** 
 594              		.loc 1 244 5 is_stmt 1 view .LVU193
 595              	.LBB2:
 244:Core/Src/adc.c **** 
 596              		.loc 1 244 5 view .LVU194
 597 0024 0025     		movs	r5, #0
 598 0026 0195     		str	r5, [sp, #4]
 244:Core/Src/adc.c **** 
 599              		.loc 1 244 5 view .LVU195
 600 0028 474B     		ldr	r3, .L49+8
 601 002a 5A6C     		ldr	r2, [r3, #68]
 602 002c 42F48072 		orr	r2, r2, #256
 603 0030 5A64     		str	r2, [r3, #68]
 244:Core/Src/adc.c **** 
 604              		.loc 1 244 5 view .LVU196
 605 0032 5A6C     		ldr	r2, [r3, #68]
 606 0034 02F48072 		and	r2, r2, #256
 607 0038 0192     		str	r2, [sp, #4]
 244:Core/Src/adc.c **** 
 608              		.loc 1 244 5 view .LVU197
 609 003a 019A     		ldr	r2, [sp, #4]
 610              	.LBE2:
 244:Core/Src/adc.c **** 
 611              		.loc 1 244 5 view .LVU198
 246:Core/Src/adc.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 612              		.loc 1 246 5 view .LVU199
 613              	.LBB3:
 246:Core/Src/adc.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 614              		.loc 1 246 5 view .LVU200
 615 003c 0295     		str	r5, [sp, #8]
 246:Core/Src/adc.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 616              		.loc 1 246 5 view .LVU201
 617 003e 1A6B     		ldr	r2, [r3, #48]
 618 0040 42F00402 		orr	r2, r2, #4
ARM GAS  /tmp/ccBhNFpU.s 			page 18


 619 0044 1A63     		str	r2, [r3, #48]
 246:Core/Src/adc.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 620              		.loc 1 246 5 view .LVU202
 621 0046 1A6B     		ldr	r2, [r3, #48]
 622 0048 02F00402 		and	r2, r2, #4
 623 004c 0292     		str	r2, [sp, #8]
 246:Core/Src/adc.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 624              		.loc 1 246 5 view .LVU203
 625 004e 029A     		ldr	r2, [sp, #8]
 626              	.LBE3:
 246:Core/Src/adc.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 627              		.loc 1 246 5 view .LVU204
 247:Core/Src/adc.c ****     __HAL_RCC_GPIOB_CLK_ENABLE();
 628              		.loc 1 247 5 view .LVU205
 629              	.LBB4:
 247:Core/Src/adc.c ****     __HAL_RCC_GPIOB_CLK_ENABLE();
 630              		.loc 1 247 5 view .LVU206
 631 0050 0395     		str	r5, [sp, #12]
 247:Core/Src/adc.c ****     __HAL_RCC_GPIOB_CLK_ENABLE();
 632              		.loc 1 247 5 view .LVU207
 633 0052 1A6B     		ldr	r2, [r3, #48]
 634 0054 42F00102 		orr	r2, r2, #1
 635 0058 1A63     		str	r2, [r3, #48]
 247:Core/Src/adc.c ****     __HAL_RCC_GPIOB_CLK_ENABLE();
 636              		.loc 1 247 5 view .LVU208
 637 005a 1A6B     		ldr	r2, [r3, #48]
 638 005c 02F00102 		and	r2, r2, #1
 639 0060 0392     		str	r2, [sp, #12]
 247:Core/Src/adc.c ****     __HAL_RCC_GPIOB_CLK_ENABLE();
 640              		.loc 1 247 5 view .LVU209
 641 0062 039A     		ldr	r2, [sp, #12]
 642              	.LBE4:
 247:Core/Src/adc.c ****     __HAL_RCC_GPIOB_CLK_ENABLE();
 643              		.loc 1 247 5 view .LVU210
 248:Core/Src/adc.c ****     /**ADC1 GPIO Configuration
 644              		.loc 1 248 5 view .LVU211
 645              	.LBB5:
 248:Core/Src/adc.c ****     /**ADC1 GPIO Configuration
 646              		.loc 1 248 5 view .LVU212
 647 0064 0495     		str	r5, [sp, #16]
 248:Core/Src/adc.c ****     /**ADC1 GPIO Configuration
 648              		.loc 1 248 5 view .LVU213
 649 0066 1A6B     		ldr	r2, [r3, #48]
 650 0068 42F00202 		orr	r2, r2, #2
 651 006c 1A63     		str	r2, [r3, #48]
 248:Core/Src/adc.c ****     /**ADC1 GPIO Configuration
 652              		.loc 1 248 5 view .LVU214
 653 006e 1B6B     		ldr	r3, [r3, #48]
 654 0070 03F00203 		and	r3, r3, #2
 655 0074 0493     		str	r3, [sp, #16]
 248:Core/Src/adc.c ****     /**ADC1 GPIO Configuration
 656              		.loc 1 248 5 view .LVU215
 657 0076 049B     		ldr	r3, [sp, #16]
 658              	.LBE5:
 248:Core/Src/adc.c ****     /**ADC1 GPIO Configuration
 659              		.loc 1 248 5 view .LVU216
 264:Core/Src/adc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
ARM GAS  /tmp/ccBhNFpU.s 			page 19


 660              		.loc 1 264 5 view .LVU217
 264:Core/Src/adc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 661              		.loc 1 264 25 is_stmt 0 view .LVU218
 662 0078 3123     		movs	r3, #49
 663 007a 0793     		str	r3, [sp, #28]
 265:Core/Src/adc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 664              		.loc 1 265 5 is_stmt 1 view .LVU219
 265:Core/Src/adc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 665              		.loc 1 265 26 is_stmt 0 view .LVU220
 666 007c 0326     		movs	r6, #3
 667 007e 0896     		str	r6, [sp, #32]
 266:Core/Src/adc.c ****     HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 668              		.loc 1 266 5 is_stmt 1 view .LVU221
 267:Core/Src/adc.c **** 
 669              		.loc 1 267 5 view .LVU222
 670 0080 07A9     		add	r1, sp, #28
 671 0082 3248     		ldr	r0, .L49+12
 672              	.LVL35:
 267:Core/Src/adc.c **** 
 673              		.loc 1 267 5 is_stmt 0 view .LVU223
 674 0084 FFF7FEFF 		bl	HAL_GPIO_Init
 675              	.LVL36:
 269:Core/Src/adc.c ****                           |ANAL5_ADC_IN4_Pin|ANAL6_ADC_IN5_Pin|ANAL7_ADC_IN6_Pin|ANAL8_ADC_IN7_Pin;
 676              		.loc 1 269 5 is_stmt 1 view .LVU224
 269:Core/Src/adc.c ****                           |ANAL5_ADC_IN4_Pin|ANAL6_ADC_IN5_Pin|ANAL7_ADC_IN6_Pin|ANAL8_ADC_IN7_Pin;
 677              		.loc 1 269 25 is_stmt 0 view .LVU225
 678 0088 FF23     		movs	r3, #255
 679 008a 0793     		str	r3, [sp, #28]
 271:Core/Src/adc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 680              		.loc 1 271 5 is_stmt 1 view .LVU226
 271:Core/Src/adc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 681              		.loc 1 271 26 is_stmt 0 view .LVU227
 682 008c 0896     		str	r6, [sp, #32]
 272:Core/Src/adc.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 683              		.loc 1 272 5 is_stmt 1 view .LVU228
 272:Core/Src/adc.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 684              		.loc 1 272 26 is_stmt 0 view .LVU229
 685 008e 0995     		str	r5, [sp, #36]
 273:Core/Src/adc.c **** 
 686              		.loc 1 273 5 is_stmt 1 view .LVU230
 687 0090 07A9     		add	r1, sp, #28
 688 0092 2F48     		ldr	r0, .L49+16
 689 0094 FFF7FEFF 		bl	HAL_GPIO_Init
 690              	.LVL37:
 275:Core/Src/adc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 691              		.loc 1 275 5 view .LVU231
 275:Core/Src/adc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 692              		.loc 1 275 25 is_stmt 0 view .LVU232
 693 0098 0796     		str	r6, [sp, #28]
 276:Core/Src/adc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 694              		.loc 1 276 5 is_stmt 1 view .LVU233
 276:Core/Src/adc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 695              		.loc 1 276 26 is_stmt 0 view .LVU234
 696 009a 0896     		str	r6, [sp, #32]
 277:Core/Src/adc.c ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 697              		.loc 1 277 5 is_stmt 1 view .LVU235
 277:Core/Src/adc.c ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
ARM GAS  /tmp/ccBhNFpU.s 			page 20


 698              		.loc 1 277 26 is_stmt 0 view .LVU236
 699 009c 0995     		str	r5, [sp, #36]
 278:Core/Src/adc.c **** 
 700              		.loc 1 278 5 is_stmt 1 view .LVU237
 701 009e 07A9     		add	r1, sp, #28
 702 00a0 2C48     		ldr	r0, .L49+20
 703 00a2 FFF7FEFF 		bl	HAL_GPIO_Init
 704              	.LVL38:
 282:Core/Src/adc.c ****     hdma_adc1.Init.Channel = DMA_CHANNEL_0;
 705              		.loc 1 282 5 view .LVU238
 282:Core/Src/adc.c ****     hdma_adc1.Init.Channel = DMA_CHANNEL_0;
 706              		.loc 1 282 24 is_stmt 0 view .LVU239
 707 00a6 2C48     		ldr	r0, .L49+24
 708 00a8 2C4B     		ldr	r3, .L49+28
 709 00aa 0360     		str	r3, [r0]
 283:Core/Src/adc.c ****     hdma_adc1.Init.Direction = DMA_PERIPH_TO_MEMORY;
 710              		.loc 1 283 5 is_stmt 1 view .LVU240
 283:Core/Src/adc.c ****     hdma_adc1.Init.Direction = DMA_PERIPH_TO_MEMORY;
 711              		.loc 1 283 28 is_stmt 0 view .LVU241
 712 00ac 4560     		str	r5, [r0, #4]
 284:Core/Src/adc.c ****     hdma_adc1.Init.PeriphInc = DMA_PINC_DISABLE;
 713              		.loc 1 284 5 is_stmt 1 view .LVU242
 284:Core/Src/adc.c ****     hdma_adc1.Init.PeriphInc = DMA_PINC_DISABLE;
 714              		.loc 1 284 30 is_stmt 0 view .LVU243
 715 00ae 8560     		str	r5, [r0, #8]
 285:Core/Src/adc.c ****     hdma_adc1.Init.MemInc = DMA_MINC_ENABLE;
 716              		.loc 1 285 5 is_stmt 1 view .LVU244
 285:Core/Src/adc.c ****     hdma_adc1.Init.MemInc = DMA_MINC_ENABLE;
 717              		.loc 1 285 30 is_stmt 0 view .LVU245
 718 00b0 C560     		str	r5, [r0, #12]
 286:Core/Src/adc.c ****     hdma_adc1.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 719              		.loc 1 286 5 is_stmt 1 view .LVU246
 286:Core/Src/adc.c ****     hdma_adc1.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 720              		.loc 1 286 27 is_stmt 0 view .LVU247
 721 00b2 4FF48063 		mov	r3, #1024
 722 00b6 0361     		str	r3, [r0, #16]
 287:Core/Src/adc.c ****     hdma_adc1.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 723              		.loc 1 287 5 is_stmt 1 view .LVU248
 287:Core/Src/adc.c ****     hdma_adc1.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 724              		.loc 1 287 40 is_stmt 0 view .LVU249
 725 00b8 4FF40063 		mov	r3, #2048
 726 00bc 4361     		str	r3, [r0, #20]
 288:Core/Src/adc.c ****     hdma_adc1.Init.Mode = DMA_CIRCULAR;
 727              		.loc 1 288 5 is_stmt 1 view .LVU250
 288:Core/Src/adc.c ****     hdma_adc1.Init.Mode = DMA_CIRCULAR;
 728              		.loc 1 288 37 is_stmt 0 view .LVU251
 729 00be 4FF40053 		mov	r3, #8192
 730 00c2 8361     		str	r3, [r0, #24]
 289:Core/Src/adc.c ****     hdma_adc1.Init.Priority = DMA_PRIORITY_LOW;
 731              		.loc 1 289 5 is_stmt 1 view .LVU252
 289:Core/Src/adc.c ****     hdma_adc1.Init.Priority = DMA_PRIORITY_LOW;
 732              		.loc 1 289 25 is_stmt 0 view .LVU253
 733 00c4 4FF48073 		mov	r3, #256
 734 00c8 C361     		str	r3, [r0, #28]
 290:Core/Src/adc.c ****     hdma_adc1.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 735              		.loc 1 290 5 is_stmt 1 view .LVU254
 290:Core/Src/adc.c ****     hdma_adc1.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
ARM GAS  /tmp/ccBhNFpU.s 			page 21


 736              		.loc 1 290 29 is_stmt 0 view .LVU255
 737 00ca 0562     		str	r5, [r0, #32]
 291:Core/Src/adc.c ****     if (HAL_DMA_Init(&hdma_adc1) != HAL_OK)
 738              		.loc 1 291 5 is_stmt 1 view .LVU256
 291:Core/Src/adc.c ****     if (HAL_DMA_Init(&hdma_adc1) != HAL_OK)
 739              		.loc 1 291 29 is_stmt 0 view .LVU257
 740 00cc 4562     		str	r5, [r0, #36]
 292:Core/Src/adc.c ****     {
 741              		.loc 1 292 5 is_stmt 1 view .LVU258
 292:Core/Src/adc.c ****     {
 742              		.loc 1 292 9 is_stmt 0 view .LVU259
 743 00ce FFF7FEFF 		bl	HAL_DMA_Init
 744              	.LVL39:
 292:Core/Src/adc.c ****     {
 745              		.loc 1 292 8 discriminator 1 view .LVU260
 746 00d2 58B9     		cbnz	r0, .L48
 747              	.L43:
 297:Core/Src/adc.c **** 
 748              		.loc 1 297 5 is_stmt 1 view .LVU261
 297:Core/Src/adc.c **** 
 749              		.loc 1 297 5 view .LVU262
 750 00d4 204B     		ldr	r3, .L49+24
 751 00d6 A363     		str	r3, [r4, #56]
 297:Core/Src/adc.c **** 
 752              		.loc 1 297 5 view .LVU263
 753 00d8 9C63     		str	r4, [r3, #56]
 297:Core/Src/adc.c **** 
 754              		.loc 1 297 5 view .LVU264
 300:Core/Src/adc.c ****     HAL_NVIC_EnableIRQ(ADC_IRQn);
 755              		.loc 1 300 5 view .LVU265
 756 00da 0022     		movs	r2, #0
 757 00dc 1146     		mov	r1, r2
 758 00de 1220     		movs	r0, #18
 759 00e0 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 760              	.LVL40:
 301:Core/Src/adc.c ****   /* USER CODE BEGIN ADC1_MspInit 1 */
 761              		.loc 1 301 5 view .LVU266
 762 00e4 1220     		movs	r0, #18
 763 00e6 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 764              	.LVL41:
 765 00ea 98E7     		b	.L41
 766              	.L48:
 294:Core/Src/adc.c ****     }
 767              		.loc 1 294 7 view .LVU267
 768 00ec FFF7FEFF 		bl	Error_Handler
 769              	.LVL42:
 770 00f0 F0E7     		b	.L43
 771              	.LVL43:
 772              	.L47:
 312:Core/Src/adc.c **** 
 773              		.loc 1 312 5 view .LVU268
 774              	.LBB6:
 312:Core/Src/adc.c **** 
 775              		.loc 1 312 5 view .LVU269
 776 00f2 0024     		movs	r4, #0
 777 00f4 0594     		str	r4, [sp, #20]
 312:Core/Src/adc.c **** 
ARM GAS  /tmp/ccBhNFpU.s 			page 22


 778              		.loc 1 312 5 view .LVU270
 779 00f6 144B     		ldr	r3, .L49+8
 780 00f8 5A6C     		ldr	r2, [r3, #68]
 781 00fa 42F48062 		orr	r2, r2, #1024
 782 00fe 5A64     		str	r2, [r3, #68]
 312:Core/Src/adc.c **** 
 783              		.loc 1 312 5 view .LVU271
 784 0100 5A6C     		ldr	r2, [r3, #68]
 785 0102 02F48062 		and	r2, r2, #1024
 786 0106 0592     		str	r2, [sp, #20]
 312:Core/Src/adc.c **** 
 787              		.loc 1 312 5 view .LVU272
 788 0108 059A     		ldr	r2, [sp, #20]
 789              	.LBE6:
 312:Core/Src/adc.c **** 
 790              		.loc 1 312 5 view .LVU273
 314:Core/Src/adc.c ****     /**ADC3 GPIO Configuration
 791              		.loc 1 314 5 view .LVU274
 792              	.LBB7:
 314:Core/Src/adc.c ****     /**ADC3 GPIO Configuration
 793              		.loc 1 314 5 view .LVU275
 794 010a 0694     		str	r4, [sp, #24]
 314:Core/Src/adc.c ****     /**ADC3 GPIO Configuration
 795              		.loc 1 314 5 view .LVU276
 796 010c 1A6B     		ldr	r2, [r3, #48]
 797 010e 42F00402 		orr	r2, r2, #4
 798 0112 1A63     		str	r2, [r3, #48]
 314:Core/Src/adc.c ****     /**ADC3 GPIO Configuration
 799              		.loc 1 314 5 view .LVU277
 800 0114 1B6B     		ldr	r3, [r3, #48]
 801 0116 03F00403 		and	r3, r3, #4
 802 011a 0693     		str	r3, [sp, #24]
 314:Core/Src/adc.c ****     /**ADC3 GPIO Configuration
 803              		.loc 1 314 5 view .LVU278
 804 011c 069B     		ldr	r3, [sp, #24]
 805              	.LBE7:
 314:Core/Src/adc.c ****     /**ADC3 GPIO Configuration
 806              		.loc 1 314 5 view .LVU279
 319:Core/Src/adc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 807              		.loc 1 319 5 view .LVU280
 319:Core/Src/adc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 808              		.loc 1 319 25 is_stmt 0 view .LVU281
 809 011e 0C23     		movs	r3, #12
 810 0120 0793     		str	r3, [sp, #28]
 320:Core/Src/adc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 811              		.loc 1 320 5 is_stmt 1 view .LVU282
 320:Core/Src/adc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 812              		.loc 1 320 26 is_stmt 0 view .LVU283
 813 0122 0323     		movs	r3, #3
 814 0124 0893     		str	r3, [sp, #32]
 321:Core/Src/adc.c ****     HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 815              		.loc 1 321 5 is_stmt 1 view .LVU284
 322:Core/Src/adc.c **** 
 816              		.loc 1 322 5 view .LVU285
 817 0126 07A9     		add	r1, sp, #28
 818 0128 0848     		ldr	r0, .L49+12
 819              	.LVL44:
ARM GAS  /tmp/ccBhNFpU.s 			page 23


 322:Core/Src/adc.c **** 
 820              		.loc 1 322 5 is_stmt 0 view .LVU286
 821 012a FFF7FEFF 		bl	HAL_GPIO_Init
 822              	.LVL45:
 325:Core/Src/adc.c ****     HAL_NVIC_EnableIRQ(ADC_IRQn);
 823              		.loc 1 325 5 is_stmt 1 view .LVU287
 824 012e 2246     		mov	r2, r4
 825 0130 2146     		mov	r1, r4
 826 0132 1220     		movs	r0, #18
 827 0134 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 828              	.LVL46:
 326:Core/Src/adc.c ****   /* USER CODE BEGIN ADC3_MspInit 1 */
 829              		.loc 1 326 5 view .LVU288
 830 0138 1220     		movs	r0, #18
 831 013a FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 832              	.LVL47:
 833              		.loc 1 331 1 is_stmt 0 view .LVU289
 834 013e 6EE7     		b	.L41
 835              	.L50:
 836              		.align	2
 837              	.L49:
 838 0140 00200140 		.word	1073815552
 839 0144 00220140 		.word	1073816064
 840 0148 00380240 		.word	1073887232
 841 014c 00080240 		.word	1073874944
 842 0150 00000240 		.word	1073872896
 843 0154 00040240 		.word	1073873920
 844 0158 00000000 		.word	hdma_adc1
 845 015c 10640240 		.word	1073898512
 846              		.cfi_endproc
 847              	.LFE237:
 849              		.section	.text.HAL_ADC_MspDeInit,"ax",%progbits
 850              		.align	1
 851              		.global	HAL_ADC_MspDeInit
 852              		.syntax unified
 853              		.thumb
 854              		.thumb_func
 856              	HAL_ADC_MspDeInit:
 857              	.LVL48:
 858              	.LFB238:
 332:Core/Src/adc.c **** 
 333:Core/Src/adc.c **** void HAL_ADC_MspDeInit(ADC_HandleTypeDef* adcHandle)
 334:Core/Src/adc.c **** {
 859              		.loc 1 334 1 is_stmt 1 view -0
 860              		.cfi_startproc
 861              		@ args = 0, pretend = 0, frame = 0
 862              		@ frame_needed = 0, uses_anonymous_args = 0
 863              		.loc 1 334 1 is_stmt 0 view .LVU291
 864 0000 10B5     		push	{r4, lr}
 865              		.cfi_def_cfa_offset 8
 866              		.cfi_offset 4, -8
 867              		.cfi_offset 14, -4
 335:Core/Src/adc.c **** 
 336:Core/Src/adc.c ****   if(adcHandle->Instance==ADC1)
 868              		.loc 1 336 3 is_stmt 1 view .LVU292
 869              		.loc 1 336 15 is_stmt 0 view .LVU293
 870 0002 0368     		ldr	r3, [r0]
ARM GAS  /tmp/ccBhNFpU.s 			page 24


 871              		.loc 1 336 5 view .LVU294
 872 0004 144A     		ldr	r2, .L57
 873 0006 9342     		cmp	r3, r2
 874 0008 03D0     		beq	.L55
 337:Core/Src/adc.c ****   {
 338:Core/Src/adc.c ****   /* USER CODE BEGIN ADC1_MspDeInit 0 */
 339:Core/Src/adc.c **** 
 340:Core/Src/adc.c ****   /* USER CODE END ADC1_MspDeInit 0 */
 341:Core/Src/adc.c ****     /* Peripheral clock disable */
 342:Core/Src/adc.c ****     __HAL_RCC_ADC1_CLK_DISABLE();
 343:Core/Src/adc.c **** 
 344:Core/Src/adc.c ****     /**ADC1 GPIO Configuration
 345:Core/Src/adc.c ****     PC0     ------> ADC1_IN10
 346:Core/Src/adc.c ****     PA0-WKUP     ------> ADC1_IN0
 347:Core/Src/adc.c ****     PA1     ------> ADC1_IN1
 348:Core/Src/adc.c ****     PA2     ------> ADC1_IN2
 349:Core/Src/adc.c ****     PA3     ------> ADC1_IN3
 350:Core/Src/adc.c ****     PA4     ------> ADC1_IN4
 351:Core/Src/adc.c ****     PA5     ------> ADC1_IN5
 352:Core/Src/adc.c ****     PA6     ------> ADC1_IN6
 353:Core/Src/adc.c ****     PA7     ------> ADC1_IN7
 354:Core/Src/adc.c ****     PC4     ------> ADC1_IN14
 355:Core/Src/adc.c ****     PC5     ------> ADC1_IN15
 356:Core/Src/adc.c ****     PB0     ------> ADC1_IN8
 357:Core/Src/adc.c ****     PB1     ------> ADC1_IN9
 358:Core/Src/adc.c ****     */
 359:Core/Src/adc.c ****     HAL_GPIO_DeInit(GPIOC, ANAL11_ADC_IN10_Pin|POT1_ADC_IN14_Pin|POT2_ADC_IN15_Pin);
 360:Core/Src/adc.c **** 
 361:Core/Src/adc.c ****     HAL_GPIO_DeInit(GPIOA, ANAL1_ADC_IN0_Pin|ANAL2_ADC_IN1_Pin|ANAL3_ADC_IN2_Pin|ANAL4_ADC_IN3_Pin
 362:Core/Src/adc.c ****                           |ANAL5_ADC_IN4_Pin|ANAL6_ADC_IN5_Pin|ANAL7_ADC_IN6_Pin|ANAL8_ADC_IN7_Pin)
 363:Core/Src/adc.c **** 
 364:Core/Src/adc.c ****     HAL_GPIO_DeInit(GPIOB, ANAL9_ADC_IN8_Pin|ANAL10_ADC_IN9_Pin);
 365:Core/Src/adc.c **** 
 366:Core/Src/adc.c ****     /* ADC1 DMA DeInit */
 367:Core/Src/adc.c ****     HAL_DMA_DeInit(adcHandle->DMA_Handle);
 368:Core/Src/adc.c **** 
 369:Core/Src/adc.c ****     /* ADC1 interrupt Deinit */
 370:Core/Src/adc.c ****   /* USER CODE BEGIN ADC1:ADC_IRQn disable */
 371:Core/Src/adc.c ****     /**
 372:Core/Src/adc.c ****     * Uncomment the line below to disable the "ADC_IRQn" interrupt
 373:Core/Src/adc.c ****     * Be aware, disabling shared interrupt may affect other IPs
 374:Core/Src/adc.c ****     */
 375:Core/Src/adc.c ****     /* HAL_NVIC_DisableIRQ(ADC_IRQn); */
 376:Core/Src/adc.c ****   /* USER CODE END ADC1:ADC_IRQn disable */
 377:Core/Src/adc.c **** 
 378:Core/Src/adc.c ****   /* USER CODE BEGIN ADC1_MspDeInit 1 */
 379:Core/Src/adc.c **** 
 380:Core/Src/adc.c ****   /* USER CODE END ADC1_MspDeInit 1 */
 381:Core/Src/adc.c ****   }
 382:Core/Src/adc.c ****   else if(adcHandle->Instance==ADC3)
 875              		.loc 1 382 8 is_stmt 1 view .LVU295
 876              		.loc 1 382 10 is_stmt 0 view .LVU296
 877 000a 144A     		ldr	r2, .L57+4
 878 000c 9342     		cmp	r3, r2
 879 000e 17D0     		beq	.L56
 880              	.LVL49:
 881              	.L51:
ARM GAS  /tmp/ccBhNFpU.s 			page 25


 383:Core/Src/adc.c ****   {
 384:Core/Src/adc.c ****   /* USER CODE BEGIN ADC3_MspDeInit 0 */
 385:Core/Src/adc.c **** 
 386:Core/Src/adc.c ****   /* USER CODE END ADC3_MspDeInit 0 */
 387:Core/Src/adc.c ****     /* Peripheral clock disable */
 388:Core/Src/adc.c ****     __HAL_RCC_ADC3_CLK_DISABLE();
 389:Core/Src/adc.c **** 
 390:Core/Src/adc.c ****     /**ADC3 GPIO Configuration
 391:Core/Src/adc.c ****     PC2     ------> ADC3_IN12
 392:Core/Src/adc.c ****     PC3     ------> ADC3_IN13
 393:Core/Src/adc.c ****     */
 394:Core/Src/adc.c ****     HAL_GPIO_DeInit(GPIOC, REF_5V_ADC_IN12_Pin|REF_24V_ADC_IN13_Pin);
 395:Core/Src/adc.c **** 
 396:Core/Src/adc.c ****     /* ADC3 interrupt Deinit */
 397:Core/Src/adc.c ****   /* USER CODE BEGIN ADC3:ADC_IRQn disable */
 398:Core/Src/adc.c ****     /**
 399:Core/Src/adc.c ****     * Uncomment the line below to disable the "ADC_IRQn" interrupt
 400:Core/Src/adc.c ****     * Be aware, disabling shared interrupt may affect other IPs
 401:Core/Src/adc.c ****     */
 402:Core/Src/adc.c ****     /* HAL_NVIC_DisableIRQ(ADC_IRQn); */
 403:Core/Src/adc.c ****   /* USER CODE END ADC3:ADC_IRQn disable */
 404:Core/Src/adc.c **** 
 405:Core/Src/adc.c ****   /* USER CODE BEGIN ADC3_MspDeInit 1 */
 406:Core/Src/adc.c **** 
 407:Core/Src/adc.c ****   /* USER CODE END ADC3_MspDeInit 1 */
 408:Core/Src/adc.c ****   }
 409:Core/Src/adc.c **** }
 882              		.loc 1 409 1 view .LVU297
 883 0010 10BD     		pop	{r4, pc}
 884              	.LVL50:
 885              	.L55:
 886              		.loc 1 409 1 view .LVU298
 887 0012 0446     		mov	r4, r0
 342:Core/Src/adc.c **** 
 888              		.loc 1 342 5 is_stmt 1 view .LVU299
 889 0014 02F58C32 		add	r2, r2, #71680
 890 0018 536C     		ldr	r3, [r2, #68]
 891 001a 23F48073 		bic	r3, r3, #256
 892 001e 5364     		str	r3, [r2, #68]
 359:Core/Src/adc.c **** 
 893              		.loc 1 359 5 view .LVU300
 894 0020 3121     		movs	r1, #49
 895 0022 0F48     		ldr	r0, .L57+8
 896              	.LVL51:
 359:Core/Src/adc.c **** 
 897              		.loc 1 359 5 is_stmt 0 view .LVU301
 898 0024 FFF7FEFF 		bl	HAL_GPIO_DeInit
 899              	.LVL52:
 361:Core/Src/adc.c ****                           |ANAL5_ADC_IN4_Pin|ANAL6_ADC_IN5_Pin|ANAL7_ADC_IN6_Pin|ANAL8_ADC_IN7_Pin)
 900              		.loc 1 361 5 is_stmt 1 view .LVU302
 901 0028 FF21     		movs	r1, #255
 902 002a 0E48     		ldr	r0, .L57+12
 903 002c FFF7FEFF 		bl	HAL_GPIO_DeInit
 904              	.LVL53:
 364:Core/Src/adc.c **** 
 905              		.loc 1 364 5 view .LVU303
 906 0030 0321     		movs	r1, #3
ARM GAS  /tmp/ccBhNFpU.s 			page 26


 907 0032 0D48     		ldr	r0, .L57+16
 908 0034 FFF7FEFF 		bl	HAL_GPIO_DeInit
 909              	.LVL54:
 367:Core/Src/adc.c **** 
 910              		.loc 1 367 5 view .LVU304
 911 0038 A06B     		ldr	r0, [r4, #56]
 912 003a FFF7FEFF 		bl	HAL_DMA_DeInit
 913              	.LVL55:
 914 003e E7E7     		b	.L51
 915              	.LVL56:
 916              	.L56:
 388:Core/Src/adc.c **** 
 917              		.loc 1 388 5 view .LVU305
 918 0040 02F58B32 		add	r2, r2, #71168
 919 0044 536C     		ldr	r3, [r2, #68]
 920 0046 23F48063 		bic	r3, r3, #1024
 921 004a 5364     		str	r3, [r2, #68]
 394:Core/Src/adc.c **** 
 922              		.loc 1 394 5 view .LVU306
 923 004c 0C21     		movs	r1, #12
 924 004e 0448     		ldr	r0, .L57+8
 925              	.LVL57:
 394:Core/Src/adc.c **** 
 926              		.loc 1 394 5 is_stmt 0 view .LVU307
 927 0050 FFF7FEFF 		bl	HAL_GPIO_DeInit
 928              	.LVL58:
 929              		.loc 1 409 1 view .LVU308
 930 0054 DCE7     		b	.L51
 931              	.L58:
 932 0056 00BF     		.align	2
 933              	.L57:
 934 0058 00200140 		.word	1073815552
 935 005c 00220140 		.word	1073816064
 936 0060 00080240 		.word	1073874944
 937 0064 00000240 		.word	1073872896
 938 0068 00040240 		.word	1073873920
 939              		.cfi_endproc
 940              	.LFE238:
 942              		.section	.text.HAL_ADC_ConvCpltCallback,"ax",%progbits
 943              		.align	1
 944              		.global	HAL_ADC_ConvCpltCallback
 945              		.syntax unified
 946              		.thumb
 947              		.thumb_func
 949              	HAL_ADC_ConvCpltCallback:
 950              	.LVL59:
 951              	.LFB239:
 410:Core/Src/adc.c **** 
 411:Core/Src/adc.c **** /* USER CODE BEGIN 1 */
 412:Core/Src/adc.c **** void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef *hadc) {
 952              		.loc 1 412 56 is_stmt 1 view -0
 953              		.cfi_startproc
 954              		@ args = 0, pretend = 0, frame = 0
 955              		@ frame_needed = 0, uses_anonymous_args = 0
 956              		.loc 1 412 56 is_stmt 0 view .LVU310
 957 0000 08B5     		push	{r3, lr}
 958              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccBhNFpU.s 			page 27


 959              		.cfi_offset 3, -8
 960              		.cfi_offset 14, -4
 413:Core/Src/adc.c ****   anal_adc_callback(hadc);
 961              		.loc 1 413 3 is_stmt 1 view .LVU311
 962 0002 FFF7FEFF 		bl	anal_adc_callback
 963              	.LVL60:
 414:Core/Src/adc.c **** }
 964              		.loc 1 414 1 is_stmt 0 view .LVU312
 965 0006 08BD     		pop	{r3, pc}
 966              		.cfi_endproc
 967              	.LFE239:
 969              		.global	hdma_adc1
 970              		.section	.bss.hdma_adc1,"aw",%nobits
 971              		.align	2
 974              	hdma_adc1:
 975 0000 00000000 		.space	96
 975      00000000 
 975      00000000 
 975      00000000 
 975      00000000 
 976              		.global	hadc3
 977              		.section	.bss.hadc3,"aw",%nobits
 978              		.align	2
 981              	hadc3:
 982 0000 00000000 		.space	72
 982      00000000 
 982      00000000 
 982      00000000 
 982      00000000 
 983              		.global	hadc1
 984              		.section	.bss.hadc1,"aw",%nobits
 985              		.align	2
 988              	hadc1:
 989 0000 00000000 		.space	72
 989      00000000 
 989      00000000 
 989      00000000 
 989      00000000 
 990              		.text
 991              	.Letext0:
 992              		.file 2 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f446xx.h"
 993              		.file 3 "/usr/arm-none-eabi/include/machine/_default_types.h"
 994              		.file 4 "/usr/arm-none-eabi/include/sys/_stdint.h"
 995              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 996              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 997              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 998              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 999              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 1000              		.file 10 "Core/Inc/adc.h"
 1001              		.file 11 "Core/Inc/anal.h"
 1002              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 1003              		.file 13 "Core/Inc/main.h"
ARM GAS  /tmp/ccBhNFpU.s 			page 28


DEFINED SYMBOLS
                            *ABS*:00000000 adc.c
     /tmp/ccBhNFpU.s:21     .text.MX_ADC1_Init:00000000 $t
     /tmp/ccBhNFpU.s:27     .text.MX_ADC1_Init:00000000 MX_ADC1_Init
     /tmp/ccBhNFpU.s:412    .text.MX_ADC1_Init:000001a4 $d
     /tmp/ccBhNFpU.s:988    .bss.hadc1:00000000 hadc1
     /tmp/ccBhNFpU.s:418    .text.MX_ADC3_Init:00000000 $t
     /tmp/ccBhNFpU.s:424    .text.MX_ADC3_Init:00000000 MX_ADC3_Init
     /tmp/ccBhNFpU.s:532    .text.MX_ADC3_Init:00000064 $d
     /tmp/ccBhNFpU.s:981    .bss.hadc3:00000000 hadc3
     /tmp/ccBhNFpU.s:539    .text.HAL_ADC_MspInit:00000000 $t
     /tmp/ccBhNFpU.s:545    .text.HAL_ADC_MspInit:00000000 HAL_ADC_MspInit
     /tmp/ccBhNFpU.s:838    .text.HAL_ADC_MspInit:00000140 $d
     /tmp/ccBhNFpU.s:974    .bss.hdma_adc1:00000000 hdma_adc1
     /tmp/ccBhNFpU.s:850    .text.HAL_ADC_MspDeInit:00000000 $t
     /tmp/ccBhNFpU.s:856    .text.HAL_ADC_MspDeInit:00000000 HAL_ADC_MspDeInit
     /tmp/ccBhNFpU.s:934    .text.HAL_ADC_MspDeInit:00000058 $d
     /tmp/ccBhNFpU.s:943    .text.HAL_ADC_ConvCpltCallback:00000000 $t
     /tmp/ccBhNFpU.s:949    .text.HAL_ADC_ConvCpltCallback:00000000 HAL_ADC_ConvCpltCallback
     /tmp/ccBhNFpU.s:971    .bss.hdma_adc1:00000000 $d
     /tmp/ccBhNFpU.s:978    .bss.hadc3:00000000 $d
     /tmp/ccBhNFpU.s:985    .bss.hadc1:00000000 $d

UNDEFINED SYMBOLS
HAL_ADC_Init
HAL_ADC_ConfigChannel
Error_Handler
HAL_GPIO_Init
HAL_DMA_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_GPIO_DeInit
HAL_DMA_DeInit
anal_adc_callback
